syntax = "proto3";

package proto.student_class;

import "student_class/student_class.proto";
import "common/enums.proto";

option java_multiple_files = true;
option java_package = "com.bannote.userservice.proto.student_class";
option java_outer_classname = "StudentClassServiceProto";

// Gateway에서 gRPC metadata로 전달되는 정보:
// - user-id: 요청하는 유저의 ID
// - user-role: 요청하는 유저의 역할 (ADMIN, STUDENT, EMPLOYEE 등)

// The student class service definition.
service StudentClassService {
//  학반 ID로 학반 조회 API
  rpc GetStudentClass (GetStudentClassRequest) returns (StudentClass) {
  }

//  학반 생성 API
  rpc CreateStudentClass (CreateStudentClassRequest) returns (StudentClass) {
  }

//  학반 수정 API
  rpc UpdateStudentClass (UpdateStudentClassRequest) returns (StudentClass) {
  }

//  학반 삭제 API
  rpc DeleteStudentClass (DeleteStudentClassRequest) returns (StudentClass) {
  }

//  학반 목록 조회 API
  rpc ListStudentClasses (ListStudentClassesRequest) returns (ListStudentClassesResponse) {
  }
}

// 학반 조회 시 필요한 정보
message GetStudentClassRequest {
  int64 id = 1;
}

// 학반 생성 시 필요한 정보
message CreateStudentClassRequest {
  int64 department_id = 1;
  string name = 2;
  int32 admission_year = 3;
  int32 graduation_year = 4;
  // created_by는 metadata의 user-id에서 추출
}

// 학반 수정 시 필요한 정보
message UpdateStudentClassRequest {
  int64 id = 1;
  optional int64 department_id = 2;
  optional string name = 3;
  optional int32 admission_year = 4;
  optional int32 graduation_year = 5;
  optional proto.common.StudentClassStatus status = 6;
}

// 학반 삭제 시 필요한 정보
message DeleteStudentClassRequest {
  int64 id = 1;
  // deleted_by는 metadata의 user-id에서 추출
}

// 학반 목록 조회 시 필요한 정보
message ListStudentClassesRequest {
  optional int64 department_id = 1;
  optional proto.common.StudentClassStatus status = 2;
  int32 page = 3;
  int32 size = 4;
}

// 학반 목록 조회 응답
message ListStudentClassesResponse {
  repeated StudentClass student_classes = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 size = 4;
}