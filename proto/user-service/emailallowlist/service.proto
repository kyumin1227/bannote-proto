syntax = "proto3";

package bannote.userservice.emailallowlist.v1;

import "emailallowlist/emailallowlist.proto";

option go_package = "github.com/kyumin1227/bannote-proto/gen/go/user-service/email_allowlist/v1";
option java_multiple_files = true;
option java_package = "com.bannote.userservice.proto.email_allowlist.v1";
option java_outer_classname = "EmailAllowlistServiceProto";

// Gateway에서 gRPC metadata로 전달되는 정보:
// - user-id: 요청하는 유저의 ID
// - user-role: 요청하는 유저의 역할 (ADMIN, STUDENT, EMPLOYEE 등)

// The email allowlist service definition.
service EmailAllowlistService {
//  이메일 허용 목록 추가 API
  rpc AddEmailAllowlist (AddEmailAllowlistRequest) returns (AddEmailAllowlistResponse) {
  }

//  이메일 허용 목록 삭제 API
  rpc RemoveEmailAllowlist (RemoveEmailAllowlistRequest) returns (RemoveEmailAllowlistResponse) {
  }

//  이메일 허용 목록 전체 조회 API
  rpc ListEmailAllowlists (ListEmailAllowlistsRequest) returns (ListEmailAllowlistsResponse) {
  }
}

// 이메일 허용 목록 추가 시 필요한 정보
message AddEmailAllowlistRequest {
  string email = 1;
}

message AddEmailAllowlistResponse {
  EmailAllowlist email_allowlist = 1;
}

// 이메일 허용 목록 삭제 시 필요한 정보
message RemoveEmailAllowlistRequest {
  int64 id = 1;
}

message RemoveEmailAllowlistResponse {
  EmailAllowlist email_allowlist = 1;
}

// 이메일 허용 목록 전체 조회 시 필요한 정보
message ListEmailAllowlistsRequest {
  int32 page = 1;
  int32 size = 2;
}

// 이메일 허용 목록 전체 조회 응답
message ListEmailAllowlistsResponse {
  repeated EmailAllowlist email_allowlists = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 size = 4;
}
