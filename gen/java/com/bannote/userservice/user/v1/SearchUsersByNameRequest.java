// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user/service.proto
// Protobuf Java Version: 4.32.1

package com.bannote.userservice.user.v1;

/**
 * <pre>
 * 이름으로 유저 검색 시 필요한 정보
 * </pre>
 *
 * Protobuf type {@code bannote.userservice.user.v1.SearchUsersByNameRequest}
 */
@com.google.protobuf.Generated
public final class SearchUsersByNameRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bannote.userservice.user.v1.SearchUsersByNameRequest)
    SearchUsersByNameRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      SearchUsersByNameRequest.class.getName());
  }
  // Use SearchUsersByNameRequest.newBuilder() to construct.
  private SearchUsersByNameRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private SearchUsersByNameRequest() {
    name_ = "";
    type_ = 0;
    status_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bannote.userservice.user.v1.ServiceProto.internal_static_bannote_userservice_user_v1_SearchUsersByNameRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bannote.userservice.user.v1.ServiceProto.internal_static_bannote_userservice_user_v1_SearchUsersByNameRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bannote.userservice.user.v1.SearchUsersByNameRequest.class, com.bannote.userservice.user.v1.SearchUsersByNameRequest.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_ = 0;
  /**
   * <pre>
   * 유저 타입 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * 유저 타입 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * 유저 타입 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  @java.lang.Override public com.bannote.userservice.common.v1.UserType getType() {
    com.bannote.userservice.common.v1.UserType result = com.bannote.userservice.common.v1.UserType.forNumber(type_);
    return result == null ? com.bannote.userservice.common.v1.UserType.UNRECOGNIZED : result;
  }

  public static final int STATUS_FIELD_NUMBER = 3;
  private int status_ = 0;
  /**
   * <pre>
   * 유저 상태 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override public boolean hasStatus() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * 유저 상태 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * 유저 상태 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
   * @return The status.
   */
  @java.lang.Override public com.bannote.userservice.common.v1.UserStatus getStatus() {
    com.bannote.userservice.common.v1.UserStatus result = com.bannote.userservice.common.v1.UserStatus.forNumber(status_);
    return result == null ? com.bannote.userservice.common.v1.UserStatus.UNRECOGNIZED : result;
  }

  public static final int PAGE_FIELD_NUMBER = 4;
  private int page_ = 0;
  /**
   * <code>int32 page = 4 [json_name = "page"];</code>
   * @return The page.
   */
  @java.lang.Override
  public int getPage() {
    return page_;
  }

  public static final int SIZE_FIELD_NUMBER = 5;
  private int size_ = 0;
  /**
   * <code>int32 size = 5 [json_name = "size"];</code>
   * @return The size.
   */
  @java.lang.Override
  public int getSize() {
    return size_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(2, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(3, status_);
    }
    if (page_ != 0) {
      output.writeInt32(4, page_);
    }
    if (size_ != 0) {
      output.writeInt32(5, size_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, status_);
    }
    if (page_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, page_);
    }
    if (size_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, size_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bannote.userservice.user.v1.SearchUsersByNameRequest)) {
      return super.equals(obj);
    }
    com.bannote.userservice.user.v1.SearchUsersByNameRequest other = (com.bannote.userservice.user.v1.SearchUsersByNameRequest) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (status_ != other.status_) return false;
    }
    if (getPage()
        != other.getPage()) return false;
    if (getSize()
        != other.getSize()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
    }
    hash = (37 * hash) + PAGE_FIELD_NUMBER;
    hash = (53 * hash) + getPage();
    hash = (37 * hash) + SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getSize();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bannote.userservice.user.v1.SearchUsersByNameRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 이름으로 유저 검색 시 필요한 정보
   * </pre>
   *
   * Protobuf type {@code bannote.userservice.user.v1.SearchUsersByNameRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bannote.userservice.user.v1.SearchUsersByNameRequest)
      com.bannote.userservice.user.v1.SearchUsersByNameRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bannote.userservice.user.v1.ServiceProto.internal_static_bannote_userservice_user_v1_SearchUsersByNameRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bannote.userservice.user.v1.ServiceProto.internal_static_bannote_userservice_user_v1_SearchUsersByNameRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bannote.userservice.user.v1.SearchUsersByNameRequest.class, com.bannote.userservice.user.v1.SearchUsersByNameRequest.Builder.class);
    }

    // Construct using com.bannote.userservice.user.v1.SearchUsersByNameRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      type_ = 0;
      status_ = 0;
      page_ = 0;
      size_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bannote.userservice.user.v1.ServiceProto.internal_static_bannote_userservice_user_v1_SearchUsersByNameRequest_descriptor;
    }

    @java.lang.Override
    public com.bannote.userservice.user.v1.SearchUsersByNameRequest getDefaultInstanceForType() {
      return com.bannote.userservice.user.v1.SearchUsersByNameRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.bannote.userservice.user.v1.SearchUsersByNameRequest build() {
      com.bannote.userservice.user.v1.SearchUsersByNameRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bannote.userservice.user.v1.SearchUsersByNameRequest buildPartial() {
      com.bannote.userservice.user.v1.SearchUsersByNameRequest result = new com.bannote.userservice.user.v1.SearchUsersByNameRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bannote.userservice.user.v1.SearchUsersByNameRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.type_ = type_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.status_ = status_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.page_ = page_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.size_ = size_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bannote.userservice.user.v1.SearchUsersByNameRequest) {
        return mergeFrom((com.bannote.userservice.user.v1.SearchUsersByNameRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bannote.userservice.user.v1.SearchUsersByNameRequest other) {
      if (other == com.bannote.userservice.user.v1.SearchUsersByNameRequest.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasType()) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasStatus()) {
        setStatusValue(other.getStatusValue());
      }
      if (other.getPage() != 0) {
        setPage(other.getPage());
      }
      if (other.getSize() != 0) {
        setSize(other.getSize());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              status_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              page_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              size_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * 유저 타입 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * 유저 타입 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * 유저 타입 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 유저 타입 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
     * @return The type.
     */
    @java.lang.Override
    public com.bannote.userservice.common.v1.UserType getType() {
      com.bannote.userservice.common.v1.UserType result = com.bannote.userservice.common.v1.UserType.forNumber(type_);
      return result == null ? com.bannote.userservice.common.v1.UserType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 유저 타입 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(com.bannote.userservice.common.v1.UserType value) {
      if (value == null) { throw new NullPointerException(); }
      bitField0_ |= 0x00000002;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 유저 타입 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      type_ = 0;
      onChanged();
      return this;
    }

    private int status_ = 0;
    /**
     * <pre>
     * 유저 상태 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * 유저 상태 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * 유저 상태 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 유저 상태 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override
    public com.bannote.userservice.common.v1.UserStatus getStatus() {
      com.bannote.userservice.common.v1.UserStatus result = com.bannote.userservice.common.v1.UserStatus.forNumber(status_);
      return result == null ? com.bannote.userservice.common.v1.UserStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * 유저 상태 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(com.bannote.userservice.common.v1.UserStatus value) {
      if (value == null) { throw new NullPointerException(); }
      bitField0_ |= 0x00000004;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 유저 상태 필터 (선택)
     * </pre>
     *
     * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000004);
      status_ = 0;
      onChanged();
      return this;
    }

    private int page_ ;
    /**
     * <code>int32 page = 4 [json_name = "page"];</code>
     * @return The page.
     */
    @java.lang.Override
    public int getPage() {
      return page_;
    }
    /**
     * <code>int32 page = 4 [json_name = "page"];</code>
     * @param value The page to set.
     * @return This builder for chaining.
     */
    public Builder setPage(int value) {

      page_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 page = 4 [json_name = "page"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPage() {
      bitField0_ = (bitField0_ & ~0x00000008);
      page_ = 0;
      onChanged();
      return this;
    }

    private int size_ ;
    /**
     * <code>int32 size = 5 [json_name = "size"];</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }
    /**
     * <code>int32 size = 5 [json_name = "size"];</code>
     * @param value The size to set.
     * @return This builder for chaining.
     */
    public Builder setSize(int value) {

      size_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int32 size = 5 [json_name = "size"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSize() {
      bitField0_ = (bitField0_ & ~0x00000010);
      size_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:bannote.userservice.user.v1.SearchUsersByNameRequest)
  }

  // @@protoc_insertion_point(class_scope:bannote.userservice.user.v1.SearchUsersByNameRequest)
  private static final com.bannote.userservice.user.v1.SearchUsersByNameRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bannote.userservice.user.v1.SearchUsersByNameRequest();
  }

  public static com.bannote.userservice.user.v1.SearchUsersByNameRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SearchUsersByNameRequest>
      PARSER = new com.google.protobuf.AbstractParser<SearchUsersByNameRequest>() {
    @java.lang.Override
    public SearchUsersByNameRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SearchUsersByNameRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SearchUsersByNameRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bannote.userservice.user.v1.SearchUsersByNameRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

