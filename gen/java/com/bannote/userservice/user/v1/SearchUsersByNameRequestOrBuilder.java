// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: user/service.proto
// Protobuf Java Version: 4.32.1

package com.bannote.userservice.user.v1;

@com.google.protobuf.Generated
public interface SearchUsersByNameRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:bannote.userservice.user.v1.SearchUsersByNameRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * 검색할 이름 (부분 일치, 초성 검색 도입 필요)
   * </pre>
   *
   * <code>string name = 1 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * 유저 타입 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * 유저 타입 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * 유저 타입 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserType type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  com.bannote.userservice.common.v1.UserType getType();

  /**
   * <pre>
   * 유저 상태 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <pre>
   * 유저 상태 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <pre>
   * 유저 상태 필터 (선택)
   * </pre>
   *
   * <code>optional .bannote.userservice.common.v1.UserStatus status = 3 [json_name = "status"];</code>
   * @return The status.
   */
  com.bannote.userservice.common.v1.UserStatus getStatus();

  /**
   * <code>int32 page = 4 [json_name = "page"];</code>
   * @return The page.
   */
  int getPage();

  /**
   * <code>int32 size = 5 [json_name = "size"];</code>
   * @return The size.
   */
  int getSize();
}
