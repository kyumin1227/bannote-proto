// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: department/service.proto
// Protobuf Java Version: 4.32.1

package com.bannote.userservice.department.v1;

/**
 * <pre>
 * 학과 목록 조회 응답
 * </pre>
 *
 * Protobuf type {@code bannote.userservice.department.v1.ListDepartmentsResponse}
 */
@com.google.protobuf.Generated
public final class ListDepartmentsResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bannote.userservice.department.v1.ListDepartmentsResponse)
    ListDepartmentsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      ListDepartmentsResponse.class.getName());
  }
  // Use ListDepartmentsResponse.newBuilder() to construct.
  private ListDepartmentsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ListDepartmentsResponse() {
    departments_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bannote.userservice.department.v1.ServiceProto.internal_static_bannote_userservice_department_v1_ListDepartmentsResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bannote.userservice.department.v1.ServiceProto.internal_static_bannote_userservice_department_v1_ListDepartmentsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bannote.userservice.department.v1.ListDepartmentsResponse.class, com.bannote.userservice.department.v1.ListDepartmentsResponse.Builder.class);
  }

  public static final int DEPARTMENTS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<com.bannote.userservice.department.v1.Department> departments_;
  /**
   * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
   */
  @java.lang.Override
  public java.util.List<com.bannote.userservice.department.v1.Department> getDepartmentsList() {
    return departments_;
  }
  /**
   * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.bannote.userservice.department.v1.DepartmentOrBuilder> 
      getDepartmentsOrBuilderList() {
    return departments_;
  }
  /**
   * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
   */
  @java.lang.Override
  public int getDepartmentsCount() {
    return departments_.size();
  }
  /**
   * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
   */
  @java.lang.Override
  public com.bannote.userservice.department.v1.Department getDepartments(int index) {
    return departments_.get(index);
  }
  /**
   * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
   */
  @java.lang.Override
  public com.bannote.userservice.department.v1.DepartmentOrBuilder getDepartmentsOrBuilder(
      int index) {
    return departments_.get(index);
  }

  public static final int TOTAL_COUNT_FIELD_NUMBER = 2;
  private int totalCount_ = 0;
  /**
   * <code>int32 total_count = 2 [json_name = "totalCount"];</code>
   * @return The totalCount.
   */
  @java.lang.Override
  public int getTotalCount() {
    return totalCount_;
  }

  public static final int PAGE_FIELD_NUMBER = 3;
  private int page_ = 0;
  /**
   * <code>int32 page = 3 [json_name = "page"];</code>
   * @return The page.
   */
  @java.lang.Override
  public int getPage() {
    return page_;
  }

  public static final int SIZE_FIELD_NUMBER = 4;
  private int size_ = 0;
  /**
   * <code>int32 size = 4 [json_name = "size"];</code>
   * @return The size.
   */
  @java.lang.Override
  public int getSize() {
    return size_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < departments_.size(); i++) {
      output.writeMessage(1, departments_.get(i));
    }
    if (totalCount_ != 0) {
      output.writeInt32(2, totalCount_);
    }
    if (page_ != 0) {
      output.writeInt32(3, page_);
    }
    if (size_ != 0) {
      output.writeInt32(4, size_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < departments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, departments_.get(i));
    }
    if (totalCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, totalCount_);
    }
    if (page_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, page_);
    }
    if (size_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, size_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bannote.userservice.department.v1.ListDepartmentsResponse)) {
      return super.equals(obj);
    }
    com.bannote.userservice.department.v1.ListDepartmentsResponse other = (com.bannote.userservice.department.v1.ListDepartmentsResponse) obj;

    if (!getDepartmentsList()
        .equals(other.getDepartmentsList())) return false;
    if (getTotalCount()
        != other.getTotalCount()) return false;
    if (getPage()
        != other.getPage()) return false;
    if (getSize()
        != other.getSize()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getDepartmentsCount() > 0) {
      hash = (37 * hash) + DEPARTMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getDepartmentsList().hashCode();
    }
    hash = (37 * hash) + TOTAL_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getTotalCount();
    hash = (37 * hash) + PAGE_FIELD_NUMBER;
    hash = (53 * hash) + getPage();
    hash = (37 * hash) + SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getSize();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.department.v1.ListDepartmentsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bannote.userservice.department.v1.ListDepartmentsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 학과 목록 조회 응답
   * </pre>
   *
   * Protobuf type {@code bannote.userservice.department.v1.ListDepartmentsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bannote.userservice.department.v1.ListDepartmentsResponse)
      com.bannote.userservice.department.v1.ListDepartmentsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bannote.userservice.department.v1.ServiceProto.internal_static_bannote_userservice_department_v1_ListDepartmentsResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bannote.userservice.department.v1.ServiceProto.internal_static_bannote_userservice_department_v1_ListDepartmentsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bannote.userservice.department.v1.ListDepartmentsResponse.class, com.bannote.userservice.department.v1.ListDepartmentsResponse.Builder.class);
    }

    // Construct using com.bannote.userservice.department.v1.ListDepartmentsResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (departmentsBuilder_ == null) {
        departments_ = java.util.Collections.emptyList();
      } else {
        departments_ = null;
        departmentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      totalCount_ = 0;
      page_ = 0;
      size_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bannote.userservice.department.v1.ServiceProto.internal_static_bannote_userservice_department_v1_ListDepartmentsResponse_descriptor;
    }

    @java.lang.Override
    public com.bannote.userservice.department.v1.ListDepartmentsResponse getDefaultInstanceForType() {
      return com.bannote.userservice.department.v1.ListDepartmentsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.bannote.userservice.department.v1.ListDepartmentsResponse build() {
      com.bannote.userservice.department.v1.ListDepartmentsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bannote.userservice.department.v1.ListDepartmentsResponse buildPartial() {
      com.bannote.userservice.department.v1.ListDepartmentsResponse result = new com.bannote.userservice.department.v1.ListDepartmentsResponse(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.bannote.userservice.department.v1.ListDepartmentsResponse result) {
      if (departmentsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          departments_ = java.util.Collections.unmodifiableList(departments_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.departments_ = departments_;
      } else {
        result.departments_ = departmentsBuilder_.build();
      }
    }

    private void buildPartial0(com.bannote.userservice.department.v1.ListDepartmentsResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.totalCount_ = totalCount_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.page_ = page_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.size_ = size_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bannote.userservice.department.v1.ListDepartmentsResponse) {
        return mergeFrom((com.bannote.userservice.department.v1.ListDepartmentsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bannote.userservice.department.v1.ListDepartmentsResponse other) {
      if (other == com.bannote.userservice.department.v1.ListDepartmentsResponse.getDefaultInstance()) return this;
      if (departmentsBuilder_ == null) {
        if (!other.departments_.isEmpty()) {
          if (departments_.isEmpty()) {
            departments_ = other.departments_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDepartmentsIsMutable();
            departments_.addAll(other.departments_);
          }
          onChanged();
        }
      } else {
        if (!other.departments_.isEmpty()) {
          if (departmentsBuilder_.isEmpty()) {
            departmentsBuilder_.dispose();
            departmentsBuilder_ = null;
            departments_ = other.departments_;
            bitField0_ = (bitField0_ & ~0x00000001);
            departmentsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 internalGetDepartmentsFieldBuilder() : null;
          } else {
            departmentsBuilder_.addAllMessages(other.departments_);
          }
        }
      }
      if (other.getTotalCount() != 0) {
        setTotalCount(other.getTotalCount());
      }
      if (other.getPage() != 0) {
        setPage(other.getPage());
      }
      if (other.getSize() != 0) {
        setSize(other.getSize());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.bannote.userservice.department.v1.Department m =
                  input.readMessage(
                      com.bannote.userservice.department.v1.Department.parser(),
                      extensionRegistry);
              if (departmentsBuilder_ == null) {
                ensureDepartmentsIsMutable();
                departments_.add(m);
              } else {
                departmentsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 16: {
              totalCount_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              page_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              size_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<com.bannote.userservice.department.v1.Department> departments_ =
      java.util.Collections.emptyList();
    private void ensureDepartmentsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        departments_ = new java.util.ArrayList<com.bannote.userservice.department.v1.Department>(departments_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.bannote.userservice.department.v1.Department, com.bannote.userservice.department.v1.Department.Builder, com.bannote.userservice.department.v1.DepartmentOrBuilder> departmentsBuilder_;

    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public java.util.List<com.bannote.userservice.department.v1.Department> getDepartmentsList() {
      if (departmentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(departments_);
      } else {
        return departmentsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public int getDepartmentsCount() {
      if (departmentsBuilder_ == null) {
        return departments_.size();
      } else {
        return departmentsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public com.bannote.userservice.department.v1.Department getDepartments(int index) {
      if (departmentsBuilder_ == null) {
        return departments_.get(index);
      } else {
        return departmentsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder setDepartments(
        int index, com.bannote.userservice.department.v1.Department value) {
      if (departmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepartmentsIsMutable();
        departments_.set(index, value);
        onChanged();
      } else {
        departmentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder setDepartments(
        int index, com.bannote.userservice.department.v1.Department.Builder builderForValue) {
      if (departmentsBuilder_ == null) {
        ensureDepartmentsIsMutable();
        departments_.set(index, builderForValue.build());
        onChanged();
      } else {
        departmentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder addDepartments(com.bannote.userservice.department.v1.Department value) {
      if (departmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepartmentsIsMutable();
        departments_.add(value);
        onChanged();
      } else {
        departmentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder addDepartments(
        int index, com.bannote.userservice.department.v1.Department value) {
      if (departmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDepartmentsIsMutable();
        departments_.add(index, value);
        onChanged();
      } else {
        departmentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder addDepartments(
        com.bannote.userservice.department.v1.Department.Builder builderForValue) {
      if (departmentsBuilder_ == null) {
        ensureDepartmentsIsMutable();
        departments_.add(builderForValue.build());
        onChanged();
      } else {
        departmentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder addDepartments(
        int index, com.bannote.userservice.department.v1.Department.Builder builderForValue) {
      if (departmentsBuilder_ == null) {
        ensureDepartmentsIsMutable();
        departments_.add(index, builderForValue.build());
        onChanged();
      } else {
        departmentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder addAllDepartments(
        java.lang.Iterable<? extends com.bannote.userservice.department.v1.Department> values) {
      if (departmentsBuilder_ == null) {
        ensureDepartmentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, departments_);
        onChanged();
      } else {
        departmentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder clearDepartments() {
      if (departmentsBuilder_ == null) {
        departments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        departmentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public Builder removeDepartments(int index) {
      if (departmentsBuilder_ == null) {
        ensureDepartmentsIsMutable();
        departments_.remove(index);
        onChanged();
      } else {
        departmentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public com.bannote.userservice.department.v1.Department.Builder getDepartmentsBuilder(
        int index) {
      return internalGetDepartmentsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public com.bannote.userservice.department.v1.DepartmentOrBuilder getDepartmentsOrBuilder(
        int index) {
      if (departmentsBuilder_ == null) {
        return departments_.get(index);  } else {
        return departmentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public java.util.List<? extends com.bannote.userservice.department.v1.DepartmentOrBuilder> 
         getDepartmentsOrBuilderList() {
      if (departmentsBuilder_ != null) {
        return departmentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(departments_);
      }
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public com.bannote.userservice.department.v1.Department.Builder addDepartmentsBuilder() {
      return internalGetDepartmentsFieldBuilder().addBuilder(
          com.bannote.userservice.department.v1.Department.getDefaultInstance());
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public com.bannote.userservice.department.v1.Department.Builder addDepartmentsBuilder(
        int index) {
      return internalGetDepartmentsFieldBuilder().addBuilder(
          index, com.bannote.userservice.department.v1.Department.getDefaultInstance());
    }
    /**
     * <code>repeated .bannote.userservice.department.v1.Department departments = 1 [json_name = "departments"];</code>
     */
    public java.util.List<com.bannote.userservice.department.v1.Department.Builder> 
         getDepartmentsBuilderList() {
      return internalGetDepartmentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.bannote.userservice.department.v1.Department, com.bannote.userservice.department.v1.Department.Builder, com.bannote.userservice.department.v1.DepartmentOrBuilder> 
        internalGetDepartmentsFieldBuilder() {
      if (departmentsBuilder_ == null) {
        departmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.bannote.userservice.department.v1.Department, com.bannote.userservice.department.v1.Department.Builder, com.bannote.userservice.department.v1.DepartmentOrBuilder>(
                departments_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        departments_ = null;
      }
      return departmentsBuilder_;
    }

    private int totalCount_ ;
    /**
     * <code>int32 total_count = 2 [json_name = "totalCount"];</code>
     * @return The totalCount.
     */
    @java.lang.Override
    public int getTotalCount() {
      return totalCount_;
    }
    /**
     * <code>int32 total_count = 2 [json_name = "totalCount"];</code>
     * @param value The totalCount to set.
     * @return This builder for chaining.
     */
    public Builder setTotalCount(int value) {

      totalCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int32 total_count = 2 [json_name = "totalCount"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      totalCount_ = 0;
      onChanged();
      return this;
    }

    private int page_ ;
    /**
     * <code>int32 page = 3 [json_name = "page"];</code>
     * @return The page.
     */
    @java.lang.Override
    public int getPage() {
      return page_;
    }
    /**
     * <code>int32 page = 3 [json_name = "page"];</code>
     * @param value The page to set.
     * @return This builder for chaining.
     */
    public Builder setPage(int value) {

      page_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 page = 3 [json_name = "page"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPage() {
      bitField0_ = (bitField0_ & ~0x00000004);
      page_ = 0;
      onChanged();
      return this;
    }

    private int size_ ;
    /**
     * <code>int32 size = 4 [json_name = "size"];</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }
    /**
     * <code>int32 size = 4 [json_name = "size"];</code>
     * @param value The size to set.
     * @return This builder for chaining.
     */
    public Builder setSize(int value) {

      size_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 size = 4 [json_name = "size"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSize() {
      bitField0_ = (bitField0_ & ~0x00000008);
      size_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:bannote.userservice.department.v1.ListDepartmentsResponse)
  }

  // @@protoc_insertion_point(class_scope:bannote.userservice.department.v1.ListDepartmentsResponse)
  private static final com.bannote.userservice.department.v1.ListDepartmentsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bannote.userservice.department.v1.ListDepartmentsResponse();
  }

  public static com.bannote.userservice.department.v1.ListDepartmentsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ListDepartmentsResponse>
      PARSER = new com.google.protobuf.AbstractParser<ListDepartmentsResponse>() {
    @java.lang.Override
    public ListDepartmentsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ListDepartmentsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ListDepartmentsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bannote.userservice.department.v1.ListDepartmentsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

