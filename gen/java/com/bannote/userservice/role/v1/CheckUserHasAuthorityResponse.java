// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: role/service.proto
// Protobuf Java Version: 4.32.1

package com.bannote.userservice.role.v1;

/**
 * <pre>
 * 유저 권한 레벨 확인 응답
 * </pre>
 *
 * Protobuf type {@code bannote.userservice.role.v1.CheckUserHasAuthorityResponse}
 */
@com.google.protobuf.Generated
public final class CheckUserHasAuthorityResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bannote.userservice.role.v1.CheckUserHasAuthorityResponse)
    CheckUserHasAuthorityResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      CheckUserHasAuthorityResponse.class.getName());
  }
  // Use CheckUserHasAuthorityResponse.newBuilder() to construct.
  private CheckUserHasAuthorityResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CheckUserHasAuthorityResponse() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bannote.userservice.role.v1.ServiceProto.internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bannote.userservice.role.v1.ServiceProto.internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.class, com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.Builder.class);
  }

  public static final int HAS_AUTHORITY_FIELD_NUMBER = 1;
  private boolean hasAuthority_ = false;
  /**
   * <code>bool has_authority = 1 [json_name = "hasAuthority"];</code>
   * @return The hasAuthority.
   */
  @java.lang.Override
  public boolean getHasAuthority() {
    return hasAuthority_;
  }

  public static final int HIGHEST_LEVEL_FIELD_NUMBER = 2;
  private int highestLevel_ = 0;
  /**
   * <pre>
   * 유저가 보유한 최고 권한 레벨
   * </pre>
   *
   * <code>int32 highest_level = 2 [json_name = "highestLevel"];</code>
   * @return The highestLevel.
   */
  @java.lang.Override
  public int getHighestLevel() {
    return highestLevel_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hasAuthority_ != false) {
      output.writeBool(1, hasAuthority_);
    }
    if (highestLevel_ != 0) {
      output.writeInt32(2, highestLevel_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (hasAuthority_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, hasAuthority_);
    }
    if (highestLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, highestLevel_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse)) {
      return super.equals(obj);
    }
    com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse other = (com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse) obj;

    if (getHasAuthority()
        != other.getHasAuthority()) return false;
    if (getHighestLevel()
        != other.getHighestLevel()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + HAS_AUTHORITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getHasAuthority());
    hash = (37 * hash) + HIGHEST_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getHighestLevel();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 유저 권한 레벨 확인 응답
   * </pre>
   *
   * Protobuf type {@code bannote.userservice.role.v1.CheckUserHasAuthorityResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bannote.userservice.role.v1.CheckUserHasAuthorityResponse)
      com.bannote.userservice.role.v1.CheckUserHasAuthorityResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bannote.userservice.role.v1.ServiceProto.internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bannote.userservice.role.v1.ServiceProto.internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.class, com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.Builder.class);
    }

    // Construct using com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      hasAuthority_ = false;
      highestLevel_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bannote.userservice.role.v1.ServiceProto.internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_descriptor;
    }

    @java.lang.Override
    public com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse getDefaultInstanceForType() {
      return com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse build() {
      com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse buildPartial() {
      com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse result = new com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.hasAuthority_ = hasAuthority_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.highestLevel_ = highestLevel_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse) {
        return mergeFrom((com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse other) {
      if (other == com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse.getDefaultInstance()) return this;
      if (other.getHasAuthority() != false) {
        setHasAuthority(other.getHasAuthority());
      }
      if (other.getHighestLevel() != 0) {
        setHighestLevel(other.getHighestLevel());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              hasAuthority_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              highestLevel_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean hasAuthority_ ;
    /**
     * <code>bool has_authority = 1 [json_name = "hasAuthority"];</code>
     * @return The hasAuthority.
     */
    @java.lang.Override
    public boolean getHasAuthority() {
      return hasAuthority_;
    }
    /**
     * <code>bool has_authority = 1 [json_name = "hasAuthority"];</code>
     * @param value The hasAuthority to set.
     * @return This builder for chaining.
     */
    public Builder setHasAuthority(boolean value) {

      hasAuthority_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>bool has_authority = 1 [json_name = "hasAuthority"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHasAuthority() {
      bitField0_ = (bitField0_ & ~0x00000001);
      hasAuthority_ = false;
      onChanged();
      return this;
    }

    private int highestLevel_ ;
    /**
     * <pre>
     * 유저가 보유한 최고 권한 레벨
     * </pre>
     *
     * <code>int32 highest_level = 2 [json_name = "highestLevel"];</code>
     * @return The highestLevel.
     */
    @java.lang.Override
    public int getHighestLevel() {
      return highestLevel_;
    }
    /**
     * <pre>
     * 유저가 보유한 최고 권한 레벨
     * </pre>
     *
     * <code>int32 highest_level = 2 [json_name = "highestLevel"];</code>
     * @param value The highestLevel to set.
     * @return This builder for chaining.
     */
    public Builder setHighestLevel(int value) {

      highestLevel_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 유저가 보유한 최고 권한 레벨
     * </pre>
     *
     * <code>int32 highest_level = 2 [json_name = "highestLevel"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHighestLevel() {
      bitField0_ = (bitField0_ & ~0x00000002);
      highestLevel_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:bannote.userservice.role.v1.CheckUserHasAuthorityResponse)
  }

  // @@protoc_insertion_point(class_scope:bannote.userservice.role.v1.CheckUserHasAuthorityResponse)
  private static final com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse();
  }

  public static com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CheckUserHasAuthorityResponse>
      PARSER = new com.google.protobuf.AbstractParser<CheckUserHasAuthorityResponse>() {
    @java.lang.Override
    public CheckUserHasAuthorityResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CheckUserHasAuthorityResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CheckUserHasAuthorityResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bannote.userservice.role.v1.CheckUserHasAuthorityResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

