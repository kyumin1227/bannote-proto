// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: role/service.proto
// Protobuf Java Version: 4.32.1

package com.bannote.userservice.role.v1;

@com.google.protobuf.Generated
public final class ServiceProto extends com.google.protobuf.GeneratedFile {
  private ServiceProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      ServiceProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_AssignRoleToUserRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_AssignRoleToUserRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_AssignRoleToUserResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_AssignRoleToUserResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_RemoveRoleFromUserRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_RemoveRoleFromUserRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_RemoveRoleFromUserResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_RemoveRoleFromUserResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_ListUserRolesRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_ListUserRolesRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_ListUserRolesResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_ListUserRolesResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022role/service.proto\022\033bannote.userservic" +
      "e.role.v1\032\017role/role.proto\032\022common/enums" +
      ".proto\"o\n\027AssignRoleToUserRequest\022\027\n\007use" +
      "r_id\030\001 \001(\003R\006userId\022;\n\004role\030\002 \001(\0162\'.banno" +
      "te.userservice.common.v1.UserRoleR\004role\"" +
      "t\n\030AssignRoleToUserResponse\022X\n\021user_role" +
      "_mapping\030\001 \001(\0132,.bannote.userservice.rol" +
      "e.v1.UserRoleMappingR\017userRoleMapping\"q\n" +
      "\031RemoveRoleFromUserRequest\022\027\n\007user_id\030\001 " +
      "\001(\003R\006userId\022;\n\004role\030\002 \001(\0162\'.bannote.user" +
      "service.common.v1.UserRoleR\004role\"v\n\032Remo" +
      "veRoleFromUserResponse\022X\n\021user_role_mapp" +
      "ing\030\001 \001(\0132,.bannote.userservice.role.v1." +
      "UserRoleMappingR\017userRoleMapping\"/\n\024List" +
      "UserRolesRequest\022\027\n\007user_id\030\001 \001(\003R\006userI" +
      "d\"V\n\025ListUserRolesResponse\022=\n\005roles\030\001 \003(" +
      "\0162\'.bannote.userservice.common.v1.UserRo" +
      "leR\005roles\"^\n\034CheckUserHasAuthorityReques" +
      "t\022\027\n\007user_id\030\001 \001(\003R\006userId\022%\n\016required_l" +
      "evel\030\002 \001(\005R\rrequiredLevel\"i\n\035CheckUserHa" +
      "sAuthorityResponse\022#\n\rhas_authority\030\001 \001(" +
      "\010R\014hasAuthority\022#\n\rhighest_level\030\002 \001(\005R\014" +
      "highestLevel2\250\004\n\013RoleService\022\201\001\n\020AssignR" +
      "oleToUser\0224.bannote.userservice.role.v1." +
      "AssignRoleToUserRequest\0325.bannote.userse" +
      "rvice.role.v1.AssignRoleToUserResponse\"\000" +
      "\022\207\001\n\022RemoveRoleFromUser\0226.bannote.userse" +
      "rvice.role.v1.RemoveRoleFromUserRequest\032" +
      "7.bannote.userservice.role.v1.RemoveRole" +
      "FromUserResponse\"\000\022x\n\rListUserRoles\0221.ba" +
      "nnote.userservice.role.v1.ListUserRolesR" +
      "equest\0322.bannote.userservice.role.v1.Lis" +
      "tUserRolesResponse\"\000\022\220\001\n\025CheckUserHasAut" +
      "hority\0229.bannote.userservice.role.v1.Che" +
      "ckUserHasAuthorityRequest\032:.bannote.user" +
      "service.role.v1.CheckUserHasAuthorityRes" +
      "ponse\"\000B\366\001\n\037com.bannote.userservice.role" +
      ".v1B\014ServiceProtoP\001Z6github.com/kyumin12" +
      "27/bannote-proto/gen/go/role;rolev1\242\002\003BU" +
      "R\252\002\033Bannote.Userservice.Role.V1\312\002\033Bannot" +
      "e\\Userservice\\Role\\V1\342\002\'Bannote\\Userserv" +
      "ice\\Role\\V1\\GPBMetadata\352\002\036Bannote::Users" +
      "ervice::Role::V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.bannote.userservice.role.v1.RoleProto.getDescriptor(),
          com.bannote.userservice.common.v1.EnumsProto.getDescriptor(),
        });
    internal_static_bannote_userservice_role_v1_AssignRoleToUserRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bannote_userservice_role_v1_AssignRoleToUserRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_AssignRoleToUserRequest_descriptor,
        new java.lang.String[] { "UserId", "Role", });
    internal_static_bannote_userservice_role_v1_AssignRoleToUserResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_bannote_userservice_role_v1_AssignRoleToUserResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_AssignRoleToUserResponse_descriptor,
        new java.lang.String[] { "UserRoleMapping", });
    internal_static_bannote_userservice_role_v1_RemoveRoleFromUserRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_bannote_userservice_role_v1_RemoveRoleFromUserRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_RemoveRoleFromUserRequest_descriptor,
        new java.lang.String[] { "UserId", "Role", });
    internal_static_bannote_userservice_role_v1_RemoveRoleFromUserResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_bannote_userservice_role_v1_RemoveRoleFromUserResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_RemoveRoleFromUserResponse_descriptor,
        new java.lang.String[] { "UserRoleMapping", });
    internal_static_bannote_userservice_role_v1_ListUserRolesRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_bannote_userservice_role_v1_ListUserRolesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_ListUserRolesRequest_descriptor,
        new java.lang.String[] { "UserId", });
    internal_static_bannote_userservice_role_v1_ListUserRolesResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_bannote_userservice_role_v1_ListUserRolesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_ListUserRolesResponse_descriptor,
        new java.lang.String[] { "Roles", });
    internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityRequest_descriptor,
        new java.lang.String[] { "UserId", "RequiredLevel", });
    internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bannote_userservice_role_v1_CheckUserHasAuthorityResponse_descriptor,
        new java.lang.String[] { "HasAuthority", "HighestLevel", });
    descriptor.resolveAllFeaturesImmutable();
    com.bannote.userservice.role.v1.RoleProto.getDescriptor();
    com.bannote.userservice.common.v1.EnumsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
