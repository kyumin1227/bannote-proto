// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: studentclass/service.proto
// Protobuf Java Version: 4.32.1

package com.bannote.userservice.studentclass.v1;

/**
 * Protobuf type {@code bannote.userservice.studentclass.v1.DeleteStudentClassResponse}
 */
@com.google.protobuf.Generated
public final class DeleteStudentClassResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:bannote.userservice.studentclass.v1.DeleteStudentClassResponse)
    DeleteStudentClassResponseOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      DeleteStudentClassResponse.class.getName());
  }
  // Use DeleteStudentClassResponse.newBuilder() to construct.
  private DeleteStudentClassResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private DeleteStudentClassResponse() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.bannote.userservice.studentclass.v1.ServiceProto.internal_static_bannote_userservice_studentclass_v1_DeleteStudentClassResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.bannote.userservice.studentclass.v1.ServiceProto.internal_static_bannote_userservice_studentclass_v1_DeleteStudentClassResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.class, com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.Builder.class);
  }

  private int bitField0_;
  public static final int STUDENT_CLASS_FIELD_NUMBER = 1;
  private com.bannote.userservice.studentclass.v1.StudentClass studentClass_;
  /**
   * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
   * @return Whether the studentClass field is set.
   */
  @java.lang.Override
  public boolean hasStudentClass() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
   * @return The studentClass.
   */
  @java.lang.Override
  public com.bannote.userservice.studentclass.v1.StudentClass getStudentClass() {
    return studentClass_ == null ? com.bannote.userservice.studentclass.v1.StudentClass.getDefaultInstance() : studentClass_;
  }
  /**
   * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
   */
  @java.lang.Override
  public com.bannote.userservice.studentclass.v1.StudentClassOrBuilder getStudentClassOrBuilder() {
    return studentClass_ == null ? com.bannote.userservice.studentclass.v1.StudentClass.getDefaultInstance() : studentClass_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getStudentClass());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStudentClass());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse)) {
      return super.equals(obj);
    }
    com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse other = (com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse) obj;

    if (hasStudentClass() != other.hasStudentClass()) return false;
    if (hasStudentClass()) {
      if (!getStudentClass()
          .equals(other.getStudentClass())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStudentClass()) {
      hash = (37 * hash) + STUDENT_CLASS_FIELD_NUMBER;
      hash = (53 * hash) + getStudentClass().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code bannote.userservice.studentclass.v1.DeleteStudentClassResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:bannote.userservice.studentclass.v1.DeleteStudentClassResponse)
      com.bannote.userservice.studentclass.v1.DeleteStudentClassResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bannote.userservice.studentclass.v1.ServiceProto.internal_static_bannote_userservice_studentclass_v1_DeleteStudentClassResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bannote.userservice.studentclass.v1.ServiceProto.internal_static_bannote_userservice_studentclass_v1_DeleteStudentClassResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.class, com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.Builder.class);
    }

    // Construct using com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        internalGetStudentClassFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      studentClass_ = null;
      if (studentClassBuilder_ != null) {
        studentClassBuilder_.dispose();
        studentClassBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.bannote.userservice.studentclass.v1.ServiceProto.internal_static_bannote_userservice_studentclass_v1_DeleteStudentClassResponse_descriptor;
    }

    @java.lang.Override
    public com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse getDefaultInstanceForType() {
      return com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse build() {
      com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse buildPartial() {
      com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse result = new com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.studentClass_ = studentClassBuilder_ == null
            ? studentClass_
            : studentClassBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse) {
        return mergeFrom((com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse other) {
      if (other == com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse.getDefaultInstance()) return this;
      if (other.hasStudentClass()) {
        mergeStudentClass(other.getStudentClass());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  internalGetStudentClassFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.bannote.userservice.studentclass.v1.StudentClass studentClass_;
    private com.google.protobuf.SingleFieldBuilder<
        com.bannote.userservice.studentclass.v1.StudentClass, com.bannote.userservice.studentclass.v1.StudentClass.Builder, com.bannote.userservice.studentclass.v1.StudentClassOrBuilder> studentClassBuilder_;
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     * @return Whether the studentClass field is set.
     */
    public boolean hasStudentClass() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     * @return The studentClass.
     */
    public com.bannote.userservice.studentclass.v1.StudentClass getStudentClass() {
      if (studentClassBuilder_ == null) {
        return studentClass_ == null ? com.bannote.userservice.studentclass.v1.StudentClass.getDefaultInstance() : studentClass_;
      } else {
        return studentClassBuilder_.getMessage();
      }
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    public Builder setStudentClass(com.bannote.userservice.studentclass.v1.StudentClass value) {
      if (studentClassBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        studentClass_ = value;
      } else {
        studentClassBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    public Builder setStudentClass(
        com.bannote.userservice.studentclass.v1.StudentClass.Builder builderForValue) {
      if (studentClassBuilder_ == null) {
        studentClass_ = builderForValue.build();
      } else {
        studentClassBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    public Builder mergeStudentClass(com.bannote.userservice.studentclass.v1.StudentClass value) {
      if (studentClassBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          studentClass_ != null &&
          studentClass_ != com.bannote.userservice.studentclass.v1.StudentClass.getDefaultInstance()) {
          getStudentClassBuilder().mergeFrom(value);
        } else {
          studentClass_ = value;
        }
      } else {
        studentClassBuilder_.mergeFrom(value);
      }
      if (studentClass_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    public Builder clearStudentClass() {
      bitField0_ = (bitField0_ & ~0x00000001);
      studentClass_ = null;
      if (studentClassBuilder_ != null) {
        studentClassBuilder_.dispose();
        studentClassBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    public com.bannote.userservice.studentclass.v1.StudentClass.Builder getStudentClassBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return internalGetStudentClassFieldBuilder().getBuilder();
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    public com.bannote.userservice.studentclass.v1.StudentClassOrBuilder getStudentClassOrBuilder() {
      if (studentClassBuilder_ != null) {
        return studentClassBuilder_.getMessageOrBuilder();
      } else {
        return studentClass_ == null ?
            com.bannote.userservice.studentclass.v1.StudentClass.getDefaultInstance() : studentClass_;
      }
    }
    /**
     * <code>.bannote.userservice.studentclass.v1.StudentClass student_class = 1 [json_name = "studentClass"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.bannote.userservice.studentclass.v1.StudentClass, com.bannote.userservice.studentclass.v1.StudentClass.Builder, com.bannote.userservice.studentclass.v1.StudentClassOrBuilder> 
        internalGetStudentClassFieldBuilder() {
      if (studentClassBuilder_ == null) {
        studentClassBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.bannote.userservice.studentclass.v1.StudentClass, com.bannote.userservice.studentclass.v1.StudentClass.Builder, com.bannote.userservice.studentclass.v1.StudentClassOrBuilder>(
                getStudentClass(),
                getParentForChildren(),
                isClean());
        studentClass_ = null;
      }
      return studentClassBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:bannote.userservice.studentclass.v1.DeleteStudentClassResponse)
  }

  // @@protoc_insertion_point(class_scope:bannote.userservice.studentclass.v1.DeleteStudentClassResponse)
  private static final com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse();
  }

  public static com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DeleteStudentClassResponse>
      PARSER = new com.google.protobuf.AbstractParser<DeleteStudentClassResponse>() {
    @java.lang.Override
    public DeleteStudentClassResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DeleteStudentClassResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DeleteStudentClassResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.bannote.userservice.studentclass.v1.DeleteStudentClassResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

