// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: role/service.proto

package rolev1

import (
	common "github.com/kyumin1227/bannote-proto/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 유저에게 권한 부여 시 필요한 정보
type AssignRoleToUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role          common.UserRole        `protobuf:"varint,2,opt,name=role,proto3,enum=bannote.userservice.common.v1.UserRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignRoleToUserRequest) Reset() {
	*x = AssignRoleToUserRequest{}
	mi := &file_role_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleToUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleToUserRequest) ProtoMessage() {}

func (x *AssignRoleToUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleToUserRequest.ProtoReflect.Descriptor instead.
func (*AssignRoleToUserRequest) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{0}
}

func (x *AssignRoleToUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssignRoleToUserRequest) GetRole() common.UserRole {
	if x != nil {
		return x.Role
	}
	return common.UserRole(0)
}

type AssignRoleToUserResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserRoleMapping *UserRoleMapping       `protobuf:"bytes,1,opt,name=user_role_mapping,json=userRoleMapping,proto3" json:"user_role_mapping,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AssignRoleToUserResponse) Reset() {
	*x = AssignRoleToUserResponse{}
	mi := &file_role_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleToUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleToUserResponse) ProtoMessage() {}

func (x *AssignRoleToUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleToUserResponse.ProtoReflect.Descriptor instead.
func (*AssignRoleToUserResponse) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{1}
}

func (x *AssignRoleToUserResponse) GetUserRoleMapping() *UserRoleMapping {
	if x != nil {
		return x.UserRoleMapping
	}
	return nil
}

// 유저에게서 권한 제거 시 필요한 정보
type RemoveRoleFromUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role          common.UserRole        `protobuf:"varint,2,opt,name=role,proto3,enum=bannote.userservice.common.v1.UserRole" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRoleFromUserRequest) Reset() {
	*x = RemoveRoleFromUserRequest{}
	mi := &file_role_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRoleFromUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleFromUserRequest) ProtoMessage() {}

func (x *RemoveRoleFromUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleFromUserRequest.ProtoReflect.Descriptor instead.
func (*RemoveRoleFromUserRequest) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveRoleFromUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveRoleFromUserRequest) GetRole() common.UserRole {
	if x != nil {
		return x.Role
	}
	return common.UserRole(0)
}

type RemoveRoleFromUserResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserRoleMapping *UserRoleMapping       `protobuf:"bytes,1,opt,name=user_role_mapping,json=userRoleMapping,proto3" json:"user_role_mapping,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RemoveRoleFromUserResponse) Reset() {
	*x = RemoveRoleFromUserResponse{}
	mi := &file_role_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRoleFromUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleFromUserResponse) ProtoMessage() {}

func (x *RemoveRoleFromUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleFromUserResponse.ProtoReflect.Descriptor instead.
func (*RemoveRoleFromUserResponse) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveRoleFromUserResponse) GetUserRoleMapping() *UserRoleMapping {
	if x != nil {
		return x.UserRoleMapping
	}
	return nil
}

// 유저의 권한 목록 조회 시 필요한 정보
type ListUserRolesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRolesRequest) Reset() {
	*x = ListUserRolesRequest{}
	mi := &file_role_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesRequest) ProtoMessage() {}

func (x *ListUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesRequest.ProtoReflect.Descriptor instead.
func (*ListUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListUserRolesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 유저의 권한 목록 조회 응답
type ListUserRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []common.UserRole      `protobuf:"varint,1,rep,packed,name=roles,proto3,enum=bannote.userservice.common.v1.UserRole" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRolesResponse) Reset() {
	*x = ListUserRolesResponse{}
	mi := &file_role_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesResponse) ProtoMessage() {}

func (x *ListUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesResponse.ProtoReflect.Descriptor instead.
func (*ListUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserRolesResponse) GetRoles() []common.UserRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// 유저 권한 레벨 확인 요청
type CheckUserHasAuthorityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RequiredLevel int32                  `protobuf:"varint,2,opt,name=required_level,json=requiredLevel,proto3" json:"required_level,omitempty"` // 30이면 반대표(30) 이상 권한 필요
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUserHasAuthorityRequest) Reset() {
	*x = CheckUserHasAuthorityRequest{}
	mi := &file_role_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserHasAuthorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserHasAuthorityRequest) ProtoMessage() {}

func (x *CheckUserHasAuthorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserHasAuthorityRequest.ProtoReflect.Descriptor instead.
func (*CheckUserHasAuthorityRequest) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{6}
}

func (x *CheckUserHasAuthorityRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckUserHasAuthorityRequest) GetRequiredLevel() int32 {
	if x != nil {
		return x.RequiredLevel
	}
	return 0
}

// 유저 권한 레벨 확인 응답
type CheckUserHasAuthorityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasAuthority  bool                   `protobuf:"varint,1,opt,name=has_authority,json=hasAuthority,proto3" json:"has_authority,omitempty"`
	HighestLevel  int32                  `protobuf:"varint,2,opt,name=highest_level,json=highestLevel,proto3" json:"highest_level,omitempty"` // 유저가 보유한 최고 권한 레벨
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUserHasAuthorityResponse) Reset() {
	*x = CheckUserHasAuthorityResponse{}
	mi := &file_role_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserHasAuthorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserHasAuthorityResponse) ProtoMessage() {}

func (x *CheckUserHasAuthorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_role_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserHasAuthorityResponse.ProtoReflect.Descriptor instead.
func (*CheckUserHasAuthorityResponse) Descriptor() ([]byte, []int) {
	return file_role_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckUserHasAuthorityResponse) GetHasAuthority() bool {
	if x != nil {
		return x.HasAuthority
	}
	return false
}

func (x *CheckUserHasAuthorityResponse) GetHighestLevel() int32 {
	if x != nil {
		return x.HighestLevel
	}
	return 0
}

var File_role_service_proto protoreflect.FileDescriptor

const file_role_service_proto_rawDesc = "" +
	"\n" +
	"\x12role/service.proto\x12\x1bbannote.userservice.role.v1\x1a\x0frole/role.proto\x1a\x12common/enums.proto\"o\n" +
	"\x17AssignRoleToUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12;\n" +
	"\x04role\x18\x02 \x01(\x0e2'.bannote.userservice.common.v1.UserRoleR\x04role\"t\n" +
	"\x18AssignRoleToUserResponse\x12X\n" +
	"\x11user_role_mapping\x18\x01 \x01(\v2,.bannote.userservice.role.v1.UserRoleMappingR\x0fuserRoleMapping\"q\n" +
	"\x19RemoveRoleFromUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12;\n" +
	"\x04role\x18\x02 \x01(\x0e2'.bannote.userservice.common.v1.UserRoleR\x04role\"v\n" +
	"\x1aRemoveRoleFromUserResponse\x12X\n" +
	"\x11user_role_mapping\x18\x01 \x01(\v2,.bannote.userservice.role.v1.UserRoleMappingR\x0fuserRoleMapping\"/\n" +
	"\x14ListUserRolesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"V\n" +
	"\x15ListUserRolesResponse\x12=\n" +
	"\x05roles\x18\x01 \x03(\x0e2'.bannote.userservice.common.v1.UserRoleR\x05roles\"^\n" +
	"\x1cCheckUserHasAuthorityRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12%\n" +
	"\x0erequired_level\x18\x02 \x01(\x05R\rrequiredLevel\"i\n" +
	"\x1dCheckUserHasAuthorityResponse\x12#\n" +
	"\rhas_authority\x18\x01 \x01(\bR\fhasAuthority\x12#\n" +
	"\rhighest_level\x18\x02 \x01(\x05R\fhighestLevel2\xa8\x04\n" +
	"\vRoleService\x12\x81\x01\n" +
	"\x10AssignRoleToUser\x124.bannote.userservice.role.v1.AssignRoleToUserRequest\x1a5.bannote.userservice.role.v1.AssignRoleToUserResponse\"\x00\x12\x87\x01\n" +
	"\x12RemoveRoleFromUser\x126.bannote.userservice.role.v1.RemoveRoleFromUserRequest\x1a7.bannote.userservice.role.v1.RemoveRoleFromUserResponse\"\x00\x12x\n" +
	"\rListUserRoles\x121.bannote.userservice.role.v1.ListUserRolesRequest\x1a2.bannote.userservice.role.v1.ListUserRolesResponse\"\x00\x12\x90\x01\n" +
	"\x15CheckUserHasAuthority\x129.bannote.userservice.role.v1.CheckUserHasAuthorityRequest\x1a:.bannote.userservice.role.v1.CheckUserHasAuthorityResponse\"\x00B\xf6\x01\n" +
	"\x1fcom.bannote.userservice.role.v1B\fServiceProtoP\x01Z6github.com/kyumin1227/bannote-proto/gen/go/role;rolev1\xa2\x02\x03BUR\xaa\x02\x1bBannote.Userservice.Role.V1\xca\x02\x1bBannote\\Userservice\\Role\\V1\xe2\x02'Bannote\\Userservice\\Role\\V1\\GPBMetadata\xea\x02\x1eBannote::Userservice::Role::V1b\x06proto3"

var (
	file_role_service_proto_rawDescOnce sync.Once
	file_role_service_proto_rawDescData []byte
)

func file_role_service_proto_rawDescGZIP() []byte {
	file_role_service_proto_rawDescOnce.Do(func() {
		file_role_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_role_service_proto_rawDesc), len(file_role_service_proto_rawDesc)))
	})
	return file_role_service_proto_rawDescData
}

var file_role_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_role_service_proto_goTypes = []any{
	(*AssignRoleToUserRequest)(nil),       // 0: bannote.userservice.role.v1.AssignRoleToUserRequest
	(*AssignRoleToUserResponse)(nil),      // 1: bannote.userservice.role.v1.AssignRoleToUserResponse
	(*RemoveRoleFromUserRequest)(nil),     // 2: bannote.userservice.role.v1.RemoveRoleFromUserRequest
	(*RemoveRoleFromUserResponse)(nil),    // 3: bannote.userservice.role.v1.RemoveRoleFromUserResponse
	(*ListUserRolesRequest)(nil),          // 4: bannote.userservice.role.v1.ListUserRolesRequest
	(*ListUserRolesResponse)(nil),         // 5: bannote.userservice.role.v1.ListUserRolesResponse
	(*CheckUserHasAuthorityRequest)(nil),  // 6: bannote.userservice.role.v1.CheckUserHasAuthorityRequest
	(*CheckUserHasAuthorityResponse)(nil), // 7: bannote.userservice.role.v1.CheckUserHasAuthorityResponse
	(common.UserRole)(0),                  // 8: bannote.userservice.common.v1.UserRole
	(*UserRoleMapping)(nil),               // 9: bannote.userservice.role.v1.UserRoleMapping
}
var file_role_service_proto_depIdxs = []int32{
	8, // 0: bannote.userservice.role.v1.AssignRoleToUserRequest.role:type_name -> bannote.userservice.common.v1.UserRole
	9, // 1: bannote.userservice.role.v1.AssignRoleToUserResponse.user_role_mapping:type_name -> bannote.userservice.role.v1.UserRoleMapping
	8, // 2: bannote.userservice.role.v1.RemoveRoleFromUserRequest.role:type_name -> bannote.userservice.common.v1.UserRole
	9, // 3: bannote.userservice.role.v1.RemoveRoleFromUserResponse.user_role_mapping:type_name -> bannote.userservice.role.v1.UserRoleMapping
	8, // 4: bannote.userservice.role.v1.ListUserRolesResponse.roles:type_name -> bannote.userservice.common.v1.UserRole
	0, // 5: bannote.userservice.role.v1.RoleService.AssignRoleToUser:input_type -> bannote.userservice.role.v1.AssignRoleToUserRequest
	2, // 6: bannote.userservice.role.v1.RoleService.RemoveRoleFromUser:input_type -> bannote.userservice.role.v1.RemoveRoleFromUserRequest
	4, // 7: bannote.userservice.role.v1.RoleService.ListUserRoles:input_type -> bannote.userservice.role.v1.ListUserRolesRequest
	6, // 8: bannote.userservice.role.v1.RoleService.CheckUserHasAuthority:input_type -> bannote.userservice.role.v1.CheckUserHasAuthorityRequest
	1, // 9: bannote.userservice.role.v1.RoleService.AssignRoleToUser:output_type -> bannote.userservice.role.v1.AssignRoleToUserResponse
	3, // 10: bannote.userservice.role.v1.RoleService.RemoveRoleFromUser:output_type -> bannote.userservice.role.v1.RemoveRoleFromUserResponse
	5, // 11: bannote.userservice.role.v1.RoleService.ListUserRoles:output_type -> bannote.userservice.role.v1.ListUserRolesResponse
	7, // 12: bannote.userservice.role.v1.RoleService.CheckUserHasAuthority:output_type -> bannote.userservice.role.v1.CheckUserHasAuthorityResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_role_service_proto_init() }
func file_role_service_proto_init() {
	if File_role_service_proto != nil {
		return
	}
	file_role_role_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_role_service_proto_rawDesc), len(file_role_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_role_service_proto_goTypes,
		DependencyIndexes: file_role_service_proto_depIdxs,
		MessageInfos:      file_role_service_proto_msgTypes,
	}.Build()
	File_role_service_proto = out.File
	file_role_service_proto_goTypes = nil
	file_role_service_proto_depIdxs = nil
}
