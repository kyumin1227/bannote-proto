// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: user/service.proto

package userv1

import (
	common "github.com/kyumin1227/bannote-proto/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 유저 조회 시 필요한 정보
type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserNumber    string                 `protobuf:"bytes,1,opt,name=user_number,json=userNumber,proto3" json:"user_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserRequest) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	mi := &file_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// 이메일로 회원 가입 여부 확인 시 필요한 정보
type CheckRegistrationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckRegistrationRequest) Reset() {
	*x = CheckRegistrationRequest{}
	mi := &file_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRegistrationRequest) ProtoMessage() {}

func (x *CheckRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRegistrationRequest.ProtoReflect.Descriptor instead.
func (*CheckRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *CheckRegistrationRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// 이메일로 회원 가입 여부 확인 응답
type CheckRegistrationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsRegistered  bool                   `protobuf:"varint,1,opt,name=is_registered,json=isRegistered,proto3" json:"is_registered,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckRegistrationResponse) Reset() {
	*x = CheckRegistrationResponse{}
	mi := &file_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRegistrationResponse) ProtoMessage() {}

func (x *CheckRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRegistrationResponse.ProtoReflect.Descriptor instead.
func (*CheckRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *CheckRegistrationResponse) GetIsRegistered() bool {
	if x != nil {
		return x.IsRegistered
	}
	return false
}

// 회원 가입 시 필요한 정보
type CreateUserRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	UserNumber string                 `protobuf:"bytes,1,opt,name=user_number,json=userNumber,proto3" json:"user_number,omitempty"`
	Email      string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FamilyName string                 `protobuf:"bytes,3,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	GivenName  string                 `protobuf:"bytes,4,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	Type       common.UserType        `protobuf:"varint,5,opt,name=type,proto3,enum=bannote.userservice.common.v1.UserType" json:"type,omitempty"`
	Bio        string                 `protobuf:"bytes,6,opt,name=bio,proto3" json:"bio,omitempty"`
	Profile    string                 `protobuf:"bytes,7,opt,name=profile,proto3" json:"profile,omitempty"`
	// UserType에 따라 최대 하나만 설정
	//
	// Types that are valid to be assigned to UserDetail:
	//
	//	*CreateUserRequest_Student
	//	*CreateUserRequest_Employee
	UserDetail    isCreateUserRequest_UserDetail `protobuf_oneof:"user_detail"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserRequest) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *CreateUserRequest) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *CreateUserRequest) GetType() common.UserType {
	if x != nil {
		return x.Type
	}
	return common.UserType(0)
}

func (x *CreateUserRequest) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *CreateUserRequest) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *CreateUserRequest) GetUserDetail() isCreateUserRequest_UserDetail {
	if x != nil {
		return x.UserDetail
	}
	return nil
}

func (x *CreateUserRequest) GetStudent() *StudentInfo {
	if x != nil {
		if x, ok := x.UserDetail.(*CreateUserRequest_Student); ok {
			return x.Student
		}
	}
	return nil
}

func (x *CreateUserRequest) GetEmployee() *EmployeeInfo {
	if x != nil {
		if x, ok := x.UserDetail.(*CreateUserRequest_Employee); ok {
			return x.Employee
		}
	}
	return nil
}

type isCreateUserRequest_UserDetail interface {
	isCreateUserRequest_UserDetail()
}

type CreateUserRequest_Student struct {
	Student *StudentInfo `protobuf:"bytes,8,opt,name=student,proto3,oneof"`
}

type CreateUserRequest_Employee struct {
	Employee *EmployeeInfo `protobuf:"bytes,9,opt,name=employee,proto3,oneof"`
}

func (*CreateUserRequest_Student) isCreateUserRequest_UserDetail() {}

func (*CreateUserRequest_Employee) isCreateUserRequest_UserDetail() {}

type CreateUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	mi := &file_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// 학생 생성 시 필요한 정보
type StudentInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StudentClassId int64                  `protobuf:"varint,1,opt,name=student_class_id,json=studentClassId,proto3" json:"student_class_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StudentInfo) Reset() {
	*x = StudentInfo{}
	mi := &file_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentInfo) ProtoMessage() {}

func (x *StudentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentInfo.ProtoReflect.Descriptor instead.
func (*StudentInfo) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *StudentInfo) GetStudentClassId() int64 {
	if x != nil {
		return x.StudentClassId
	}
	return 0
}

// 직원 생성 시 필요한 정보
type EmployeeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DepartmentId  int64                  `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmployeeInfo) Reset() {
	*x = EmployeeInfo{}
	mi := &file_user_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmployeeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeInfo) ProtoMessage() {}

func (x *EmployeeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeInfo.ProtoReflect.Descriptor instead.
func (*EmployeeInfo) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{7}
}

func (x *EmployeeInfo) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

// 본인이 스스로 변경 가능한 정보
type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserNumber    string                 `protobuf:"bytes,1,opt,name=user_number,json=userNumber,proto3" json:"user_number,omitempty"`
	Email         *string                `protobuf:"bytes,2,opt,name=email,proto3,oneof" json:"email,omitempty"`
	FamilyName    *string                `protobuf:"bytes,3,opt,name=family_name,json=familyName,proto3,oneof" json:"family_name,omitempty"`
	GivenName     *string                `protobuf:"bytes,4,opt,name=given_name,json=givenName,proto3,oneof" json:"given_name,omitempty"`
	Bio           *string                `protobuf:"bytes,5,opt,name=bio,proto3,oneof" json:"bio,omitempty"`
	Profile       *string                `protobuf:"bytes,6,opt,name=profile,proto3,oneof" json:"profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_user_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserRequest) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *UpdateUserRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *UpdateUserRequest) GetFamilyName() string {
	if x != nil && x.FamilyName != nil {
		return *x.FamilyName
	}
	return ""
}

func (x *UpdateUserRequest) GetGivenName() string {
	if x != nil && x.GivenName != nil {
		return *x.GivenName
	}
	return ""
}

func (x *UpdateUserRequest) GetBio() string {
	if x != nil && x.Bio != nil {
		return *x.Bio
	}
	return ""
}

func (x *UpdateUserRequest) GetProfile() string {
	if x != nil && x.Profile != nil {
		return *x.Profile
	}
	return ""
}

type UpdateUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	mi := &file_user_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// 이름으로 유저 검색 시 필요한 정보
type SearchUsersByNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                          // 검색할 이름 (부분 일치, 초성 검색 도입 필요)
	Type          *common.UserType       `protobuf:"varint,2,opt,name=type,proto3,enum=bannote.userservice.common.v1.UserType,oneof" json:"type,omitempty"`       // 유저 타입 필터 (선택)
	Status        *common.UserStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=bannote.userservice.common.v1.UserStatus,oneof" json:"status,omitempty"` // 유저 상태 필터 (선택)
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUsersByNameRequest) Reset() {
	*x = SearchUsersByNameRequest{}
	mi := &file_user_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersByNameRequest) ProtoMessage() {}

func (x *SearchUsersByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersByNameRequest.ProtoReflect.Descriptor instead.
func (*SearchUsersByNameRequest) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{10}
}

func (x *SearchUsersByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchUsersByNameRequest) GetType() common.UserType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return common.UserType(0)
}

func (x *SearchUsersByNameRequest) GetStatus() common.UserStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.UserStatus(0)
}

func (x *SearchUsersByNameRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchUsersByNameRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 이름으로 유저 검색 응답
type SearchUsersByNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchUsersByNameResponse) Reset() {
	*x = SearchUsersByNameResponse{}
	mi := &file_user_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUsersByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUsersByNameResponse) ProtoMessage() {}

func (x *SearchUsersByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUsersByNameResponse.ProtoReflect.Descriptor instead.
func (*SearchUsersByNameResponse) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{11}
}

func (x *SearchUsersByNameResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *SearchUsersByNameResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchUsersByNameResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchUsersByNameResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 유저 목록 조회 시 필요한 정보
type ListUsersRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Type           *common.UserType       `protobuf:"varint,1,opt,name=type,proto3,enum=bannote.userservice.common.v1.UserType,oneof" json:"type,omitempty"`       // 유저 타입 필터 (선택)
	Status         *common.UserStatus     `protobuf:"varint,2,opt,name=status,proto3,enum=bannote.userservice.common.v1.UserStatus,oneof" json:"status,omitempty"` // 유저 상태 필터 (선택)
	StudentClassId *int64                 `protobuf:"varint,3,opt,name=student_class_id,json=studentClassId,proto3,oneof" json:"student_class_id,omitempty"`       // 학반 ID 필터 (선택)
	DepartmentId   *int64                 `protobuf:"varint,4,opt,name=department_id,json=departmentId,proto3,oneof" json:"department_id,omitempty"`               // 학과 ID 필터 (선택)
	Page           int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Size           int32                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_user_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{12}
}

func (x *ListUsersRequest) GetType() common.UserType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return common.UserType(0)
}

func (x *ListUsersRequest) GetStatus() common.UserStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.UserStatus(0)
}

func (x *ListUsersRequest) GetStudentClassId() int64 {
	if x != nil && x.StudentClassId != nil {
		return *x.StudentClassId
	}
	return 0
}

func (x *ListUsersRequest) GetDepartmentId() int64 {
	if x != nil && x.DepartmentId != nil {
		return *x.DepartmentId
	}
	return 0
}

func (x *ListUsersRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUsersRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 유저 목록 조회 응답
type ListUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_user_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_user_service_proto_rawDescGZIP(), []int{13}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListUsersResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListUsersResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_user_service_proto protoreflect.FileDescriptor

const file_user_service_proto_rawDesc = "" +
	"\n" +
	"\x12user/service.proto\x12\x1bbannote.userservice.user.v1\x1a\x0fuser/user.proto\x1a\x12common/enums.proto\"1\n" +
	"\x0eGetUserRequest\x12\x1f\n" +
	"\vuser_number\x18\x01 \x01(\tR\n" +
	"userNumber\"H\n" +
	"\x0fGetUserResponse\x125\n" +
	"\x04user\x18\x01 \x01(\v2!.bannote.userservice.user.v1.UserR\x04user\"0\n" +
	"\x18CheckRegistrationRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\"@\n" +
	"\x19CheckRegistrationResponse\x12#\n" +
	"\ris_registered\x18\x01 \x01(\bR\fisRegistered\"\x91\x03\n" +
	"\x11CreateUserRequest\x12\x1f\n" +
	"\vuser_number\x18\x01 \x01(\tR\n" +
	"userNumber\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x1f\n" +
	"\vfamily_name\x18\x03 \x01(\tR\n" +
	"familyName\x12\x1d\n" +
	"\n" +
	"given_name\x18\x04 \x01(\tR\tgivenName\x12;\n" +
	"\x04type\x18\x05 \x01(\x0e2'.bannote.userservice.common.v1.UserTypeR\x04type\x12\x10\n" +
	"\x03bio\x18\x06 \x01(\tR\x03bio\x12\x18\n" +
	"\aprofile\x18\a \x01(\tR\aprofile\x12D\n" +
	"\astudent\x18\b \x01(\v2(.bannote.userservice.user.v1.StudentInfoH\x00R\astudent\x12G\n" +
	"\bemployee\x18\t \x01(\v2).bannote.userservice.user.v1.EmployeeInfoH\x00R\bemployeeB\r\n" +
	"\vuser_detail\"K\n" +
	"\x12CreateUserResponse\x125\n" +
	"\x04user\x18\x01 \x01(\v2!.bannote.userservice.user.v1.UserR\x04user\"7\n" +
	"\vStudentInfo\x12(\n" +
	"\x10student_class_id\x18\x01 \x01(\x03R\x0estudentClassId\"3\n" +
	"\fEmployeeInfo\x12#\n" +
	"\rdepartment_id\x18\x01 \x01(\x03R\fdepartmentId\"\x8c\x02\n" +
	"\x11UpdateUserRequest\x12\x1f\n" +
	"\vuser_number\x18\x01 \x01(\tR\n" +
	"userNumber\x12\x19\n" +
	"\x05email\x18\x02 \x01(\tH\x00R\x05email\x88\x01\x01\x12$\n" +
	"\vfamily_name\x18\x03 \x01(\tH\x01R\n" +
	"familyName\x88\x01\x01\x12\"\n" +
	"\n" +
	"given_name\x18\x04 \x01(\tH\x02R\tgivenName\x88\x01\x01\x12\x15\n" +
	"\x03bio\x18\x05 \x01(\tH\x03R\x03bio\x88\x01\x01\x12\x1d\n" +
	"\aprofile\x18\x06 \x01(\tH\x04R\aprofile\x88\x01\x01B\b\n" +
	"\x06_emailB\x0e\n" +
	"\f_family_nameB\r\n" +
	"\v_given_nameB\x06\n" +
	"\x04_bioB\n" +
	"\n" +
	"\b_profile\"K\n" +
	"\x12UpdateUserResponse\x125\n" +
	"\x04user\x18\x01 \x01(\v2!.bannote.userservice.user.v1.UserR\x04user\"\xf4\x01\n" +
	"\x18SearchUsersByNameRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12@\n" +
	"\x04type\x18\x02 \x01(\x0e2'.bannote.userservice.common.v1.UserTypeH\x00R\x04type\x88\x01\x01\x12F\n" +
	"\x06status\x18\x03 \x01(\x0e2).bannote.userservice.common.v1.UserStatusH\x01R\x06status\x88\x01\x01\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x05R\x04sizeB\a\n" +
	"\x05_typeB\t\n" +
	"\a_status\"\x9d\x01\n" +
	"\x19SearchUsersByNameResponse\x127\n" +
	"\x05users\x18\x01 \x03(\v2!.bannote.userservice.user.v1.UserR\x05users\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\"\xd8\x02\n" +
	"\x10ListUsersRequest\x12@\n" +
	"\x04type\x18\x01 \x01(\x0e2'.bannote.userservice.common.v1.UserTypeH\x00R\x04type\x88\x01\x01\x12F\n" +
	"\x06status\x18\x02 \x01(\x0e2).bannote.userservice.common.v1.UserStatusH\x01R\x06status\x88\x01\x01\x12-\n" +
	"\x10student_class_id\x18\x03 \x01(\x03H\x02R\x0estudentClassId\x88\x01\x01\x12(\n" +
	"\rdepartment_id\x18\x04 \x01(\x03H\x03R\fdepartmentId\x88\x01\x01\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x05R\x04sizeB\a\n" +
	"\x05_typeB\t\n" +
	"\a_statusB\x13\n" +
	"\x11_student_class_idB\x10\n" +
	"\x0e_department_id\"\x95\x01\n" +
	"\x11ListUsersResponse\x127\n" +
	"\x05users\x18\x01 \x03(\v2!.bannote.userservice.user.v1.UserR\x05users\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size2\xd3\x05\n" +
	"\vUserService\x12f\n" +
	"\aGetUser\x12+.bannote.userservice.user.v1.GetUserRequest\x1a,.bannote.userservice.user.v1.GetUserResponse\"\x00\x12\x84\x01\n" +
	"\x11CheckRegistration\x125.bannote.userservice.user.v1.CheckRegistrationRequest\x1a6.bannote.userservice.user.v1.CheckRegistrationResponse\"\x00\x12o\n" +
	"\n" +
	"CreateUser\x12..bannote.userservice.user.v1.CreateUserRequest\x1a/.bannote.userservice.user.v1.CreateUserResponse\"\x00\x12o\n" +
	"\n" +
	"UpdateUser\x12..bannote.userservice.user.v1.UpdateUserRequest\x1a/.bannote.userservice.user.v1.UpdateUserResponse\"\x00\x12\x84\x01\n" +
	"\x11SearchUsersByName\x125.bannote.userservice.user.v1.SearchUsersByNameRequest\x1a6.bannote.userservice.user.v1.SearchUsersByNameResponse\"\x00\x12l\n" +
	"\tListUsers\x12-.bannote.userservice.user.v1.ListUsersRequest\x1a..bannote.userservice.user.v1.ListUsersResponse\"\x00B\xf6\x01\n" +
	"\x1fcom.bannote.userservice.user.v1B\fServiceProtoP\x01Z6github.com/kyumin1227/bannote-proto/gen/go/user;userv1\xa2\x02\x03BUU\xaa\x02\x1bBannote.Userservice.User.V1\xca\x02\x1bBannote\\Userservice\\User\\V1\xe2\x02'Bannote\\Userservice\\User\\V1\\GPBMetadata\xea\x02\x1eBannote::Userservice::User::V1b\x06proto3"

var (
	file_user_service_proto_rawDescOnce sync.Once
	file_user_service_proto_rawDescData []byte
)

func file_user_service_proto_rawDescGZIP() []byte {
	file_user_service_proto_rawDescOnce.Do(func() {
		file_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_service_proto_rawDesc), len(file_user_service_proto_rawDesc)))
	})
	return file_user_service_proto_rawDescData
}

var file_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_user_service_proto_goTypes = []any{
	(*GetUserRequest)(nil),            // 0: bannote.userservice.user.v1.GetUserRequest
	(*GetUserResponse)(nil),           // 1: bannote.userservice.user.v1.GetUserResponse
	(*CheckRegistrationRequest)(nil),  // 2: bannote.userservice.user.v1.CheckRegistrationRequest
	(*CheckRegistrationResponse)(nil), // 3: bannote.userservice.user.v1.CheckRegistrationResponse
	(*CreateUserRequest)(nil),         // 4: bannote.userservice.user.v1.CreateUserRequest
	(*CreateUserResponse)(nil),        // 5: bannote.userservice.user.v1.CreateUserResponse
	(*StudentInfo)(nil),               // 6: bannote.userservice.user.v1.StudentInfo
	(*EmployeeInfo)(nil),              // 7: bannote.userservice.user.v1.EmployeeInfo
	(*UpdateUserRequest)(nil),         // 8: bannote.userservice.user.v1.UpdateUserRequest
	(*UpdateUserResponse)(nil),        // 9: bannote.userservice.user.v1.UpdateUserResponse
	(*SearchUsersByNameRequest)(nil),  // 10: bannote.userservice.user.v1.SearchUsersByNameRequest
	(*SearchUsersByNameResponse)(nil), // 11: bannote.userservice.user.v1.SearchUsersByNameResponse
	(*ListUsersRequest)(nil),          // 12: bannote.userservice.user.v1.ListUsersRequest
	(*ListUsersResponse)(nil),         // 13: bannote.userservice.user.v1.ListUsersResponse
	(*User)(nil),                      // 14: bannote.userservice.user.v1.User
	(common.UserType)(0),              // 15: bannote.userservice.common.v1.UserType
	(common.UserStatus)(0),            // 16: bannote.userservice.common.v1.UserStatus
}
var file_user_service_proto_depIdxs = []int32{
	14, // 0: bannote.userservice.user.v1.GetUserResponse.user:type_name -> bannote.userservice.user.v1.User
	15, // 1: bannote.userservice.user.v1.CreateUserRequest.type:type_name -> bannote.userservice.common.v1.UserType
	6,  // 2: bannote.userservice.user.v1.CreateUserRequest.student:type_name -> bannote.userservice.user.v1.StudentInfo
	7,  // 3: bannote.userservice.user.v1.CreateUserRequest.employee:type_name -> bannote.userservice.user.v1.EmployeeInfo
	14, // 4: bannote.userservice.user.v1.CreateUserResponse.user:type_name -> bannote.userservice.user.v1.User
	14, // 5: bannote.userservice.user.v1.UpdateUserResponse.user:type_name -> bannote.userservice.user.v1.User
	15, // 6: bannote.userservice.user.v1.SearchUsersByNameRequest.type:type_name -> bannote.userservice.common.v1.UserType
	16, // 7: bannote.userservice.user.v1.SearchUsersByNameRequest.status:type_name -> bannote.userservice.common.v1.UserStatus
	14, // 8: bannote.userservice.user.v1.SearchUsersByNameResponse.users:type_name -> bannote.userservice.user.v1.User
	15, // 9: bannote.userservice.user.v1.ListUsersRequest.type:type_name -> bannote.userservice.common.v1.UserType
	16, // 10: bannote.userservice.user.v1.ListUsersRequest.status:type_name -> bannote.userservice.common.v1.UserStatus
	14, // 11: bannote.userservice.user.v1.ListUsersResponse.users:type_name -> bannote.userservice.user.v1.User
	0,  // 12: bannote.userservice.user.v1.UserService.GetUser:input_type -> bannote.userservice.user.v1.GetUserRequest
	2,  // 13: bannote.userservice.user.v1.UserService.CheckRegistration:input_type -> bannote.userservice.user.v1.CheckRegistrationRequest
	4,  // 14: bannote.userservice.user.v1.UserService.CreateUser:input_type -> bannote.userservice.user.v1.CreateUserRequest
	8,  // 15: bannote.userservice.user.v1.UserService.UpdateUser:input_type -> bannote.userservice.user.v1.UpdateUserRequest
	10, // 16: bannote.userservice.user.v1.UserService.SearchUsersByName:input_type -> bannote.userservice.user.v1.SearchUsersByNameRequest
	12, // 17: bannote.userservice.user.v1.UserService.ListUsers:input_type -> bannote.userservice.user.v1.ListUsersRequest
	1,  // 18: bannote.userservice.user.v1.UserService.GetUser:output_type -> bannote.userservice.user.v1.GetUserResponse
	3,  // 19: bannote.userservice.user.v1.UserService.CheckRegistration:output_type -> bannote.userservice.user.v1.CheckRegistrationResponse
	5,  // 20: bannote.userservice.user.v1.UserService.CreateUser:output_type -> bannote.userservice.user.v1.CreateUserResponse
	9,  // 21: bannote.userservice.user.v1.UserService.UpdateUser:output_type -> bannote.userservice.user.v1.UpdateUserResponse
	11, // 22: bannote.userservice.user.v1.UserService.SearchUsersByName:output_type -> bannote.userservice.user.v1.SearchUsersByNameResponse
	13, // 23: bannote.userservice.user.v1.UserService.ListUsers:output_type -> bannote.userservice.user.v1.ListUsersResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_user_service_proto_init() }
func file_user_service_proto_init() {
	if File_user_service_proto != nil {
		return
	}
	file_user_user_proto_init()
	file_user_service_proto_msgTypes[4].OneofWrappers = []any{
		(*CreateUserRequest_Student)(nil),
		(*CreateUserRequest_Employee)(nil),
	}
	file_user_service_proto_msgTypes[8].OneofWrappers = []any{}
	file_user_service_proto_msgTypes[10].OneofWrappers = []any{}
	file_user_service_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_service_proto_rawDesc), len(file_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_service_proto_goTypes,
		DependencyIndexes: file_user_service_proto_depIdxs,
		MessageInfos:      file_user_service_proto_msgTypes,
	}.Build()
	File_user_service_proto = out.File
	file_user_service_proto_goTypes = nil
	file_user_service_proto_depIdxs = nil
}
