// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: user/user.proto

package userv1

import (
	common "github.com/kyumin1227/bannote-proto/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 학생의 경우 유저 정보에 포함하여 반환
type Student struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StudentClassId int64                  `protobuf:"varint,3,opt,name=student_class_id,json=studentClassId,proto3" json:"student_class_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Student) Reset() {
	*x = Student{}
	mi := &file_user_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Student) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Student) ProtoMessage() {}

func (x *Student) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Student.ProtoReflect.Descriptor instead.
func (*Student) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{0}
}

func (x *Student) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Student) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Student) GetStudentClassId() int64 {
	if x != nil {
		return x.StudentClassId
	}
	return 0
}

// 직원의 경우 유저 정보에 포함하여 반환
type Employee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DepartmentId  int64                  `protobuf:"varint,3,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Employee) Reset() {
	*x = Employee{}
	mi := &file_user_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Employee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employee) ProtoMessage() {}

func (x *Employee) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employee.ProtoReflect.Descriptor instead.
func (*Employee) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{1}
}

func (x *Employee) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Employee) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Employee) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

// 유저
type User struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Id         int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserNumber string                 `protobuf:"bytes,2,opt,name=user_number,json=userNumber,proto3" json:"user_number,omitempty"`
	Email      string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Name       string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	FamilyName string                 `protobuf:"bytes,5,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	GivenName  string                 `protobuf:"bytes,6,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	Type       common.UserType        `protobuf:"varint,7,opt,name=type,proto3,enum=bannote.userservice.common.v1.UserType" json:"type,omitempty"`
	Status     common.UserStatus      `protobuf:"varint,8,opt,name=status,proto3,enum=bannote.userservice.common.v1.UserStatus" json:"status,omitempty"`
	Bio        string                 `protobuf:"bytes,9,opt,name=bio,proto3" json:"bio,omitempty"`
	Profile    string                 `protobuf:"bytes,10,opt,name=profile,proto3" json:"profile,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// UserType에 따라 최대 하나만 설정
	//
	// Types that are valid to be assigned to UserDetail:
	//
	//	*User_Student
	//	*User_Employee
	UserDetail    isUser_UserDetail `protobuf_oneof:"user_detail"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_user_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_user_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_user_user_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUserNumber() string {
	if x != nil {
		return x.UserNumber
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *User) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *User) GetType() common.UserType {
	if x != nil {
		return x.Type
	}
	return common.UserType(0)
}

func (x *User) GetStatus() common.UserStatus {
	if x != nil {
		return x.Status
	}
	return common.UserStatus(0)
}

func (x *User) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *User) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *User) GetUserDetail() isUser_UserDetail {
	if x != nil {
		return x.UserDetail
	}
	return nil
}

func (x *User) GetStudent() *Student {
	if x != nil {
		if x, ok := x.UserDetail.(*User_Student); ok {
			return x.Student
		}
	}
	return nil
}

func (x *User) GetEmployee() *Employee {
	if x != nil {
		if x, ok := x.UserDetail.(*User_Employee); ok {
			return x.Employee
		}
	}
	return nil
}

type isUser_UserDetail interface {
	isUser_UserDetail()
}

type User_Student struct {
	Student *Student `protobuf:"bytes,13,opt,name=student,proto3,oneof"`
}

type User_Employee struct {
	Employee *Employee `protobuf:"bytes,14,opt,name=employee,proto3,oneof"`
}

func (*User_Student) isUser_UserDetail() {}

func (*User_Employee) isUser_UserDetail() {}

var File_user_user_proto protoreflect.FileDescriptor

const file_user_user_proto_rawDesc = "" +
	"\n" +
	"\x0fuser/user.proto\x12\x1bbannote.userservice.user.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x12common/enums.proto\"\\\n" +
	"\aStudent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12(\n" +
	"\x10student_class_id\x18\x03 \x01(\x03R\x0estudentClassId\"X\n" +
	"\bEmployee\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12#\n" +
	"\rdepartment_id\x18\x03 \x01(\x03R\fdepartmentId\"\xd9\x04\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1f\n" +
	"\vuser_number\x18\x02 \x01(\tR\n" +
	"userNumber\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1f\n" +
	"\vfamily_name\x18\x05 \x01(\tR\n" +
	"familyName\x12\x1d\n" +
	"\n" +
	"given_name\x18\x06 \x01(\tR\tgivenName\x12;\n" +
	"\x04type\x18\a \x01(\x0e2'.bannote.userservice.common.v1.UserTypeR\x04type\x12A\n" +
	"\x06status\x18\b \x01(\x0e2).bannote.userservice.common.v1.UserStatusR\x06status\x12\x10\n" +
	"\x03bio\x18\t \x01(\tR\x03bio\x12\x18\n" +
	"\aprofile\x18\n" +
	" \x01(\tR\aprofile\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"deleted_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\x12@\n" +
	"\astudent\x18\r \x01(\v2$.bannote.userservice.user.v1.StudentH\x00R\astudent\x12C\n" +
	"\bemployee\x18\x0e \x01(\v2%.bannote.userservice.user.v1.EmployeeH\x00R\bemployeeB\r\n" +
	"\vuser_detailB\xf3\x01\n" +
	"\x1fcom.bannote.userservice.user.v1B\tUserProtoP\x01Z6github.com/kyumin1227/bannote-proto/gen/go/user;userv1\xa2\x02\x03BUU\xaa\x02\x1bBannote.Userservice.User.V1\xca\x02\x1bBannote\\Userservice\\User\\V1\xe2\x02'Bannote\\Userservice\\User\\V1\\GPBMetadata\xea\x02\x1eBannote::Userservice::User::V1b\x06proto3"

var (
	file_user_user_proto_rawDescOnce sync.Once
	file_user_user_proto_rawDescData []byte
)

func file_user_user_proto_rawDescGZIP() []byte {
	file_user_user_proto_rawDescOnce.Do(func() {
		file_user_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_user_user_proto_rawDesc), len(file_user_user_proto_rawDesc)))
	})
	return file_user_user_proto_rawDescData
}

var file_user_user_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_user_user_proto_goTypes = []any{
	(*Student)(nil),               // 0: bannote.userservice.user.v1.Student
	(*Employee)(nil),              // 1: bannote.userservice.user.v1.Employee
	(*User)(nil),                  // 2: bannote.userservice.user.v1.User
	(common.UserType)(0),          // 3: bannote.userservice.common.v1.UserType
	(common.UserStatus)(0),        // 4: bannote.userservice.common.v1.UserStatus
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_user_user_proto_depIdxs = []int32{
	3, // 0: bannote.userservice.user.v1.User.type:type_name -> bannote.userservice.common.v1.UserType
	4, // 1: bannote.userservice.user.v1.User.status:type_name -> bannote.userservice.common.v1.UserStatus
	5, // 2: bannote.userservice.user.v1.User.created_at:type_name -> google.protobuf.Timestamp
	5, // 3: bannote.userservice.user.v1.User.deleted_at:type_name -> google.protobuf.Timestamp
	0, // 4: bannote.userservice.user.v1.User.student:type_name -> bannote.userservice.user.v1.Student
	1, // 5: bannote.userservice.user.v1.User.employee:type_name -> bannote.userservice.user.v1.Employee
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_user_user_proto_init() }
func file_user_user_proto_init() {
	if File_user_user_proto != nil {
		return
	}
	file_user_user_proto_msgTypes[2].OneofWrappers = []any{
		(*User_Student)(nil),
		(*User_Employee)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_user_user_proto_rawDesc), len(file_user_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_user_proto_goTypes,
		DependencyIndexes: file_user_user_proto_depIdxs,
		MessageInfos:      file_user_user_proto_msgTypes,
	}.Build()
	File_user_user_proto = out.File
	file_user_user_proto_goTypes = nil
	file_user_user_proto_depIdxs = nil
}
