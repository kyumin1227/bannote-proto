// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: studentclass/service.proto

package studentclassv1

import (
	common "github.com/kyumin1227/bannote-proto/gen/go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 학반 조회 시 필요한 정보
type GetStudentClassRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudentClassRequest) Reset() {
	*x = GetStudentClassRequest{}
	mi := &file_studentclass_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentClassRequest) ProtoMessage() {}

func (x *GetStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentClassRequest.ProtoReflect.Descriptor instead.
func (*GetStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetStudentClassRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetStudentClassResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudentClass  *StudentClass          `protobuf:"bytes,1,opt,name=student_class,json=studentClass,proto3" json:"student_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStudentClassResponse) Reset() {
	*x = GetStudentClassResponse{}
	mi := &file_studentclass_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentClassResponse) ProtoMessage() {}

func (x *GetStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentClassResponse.ProtoReflect.Descriptor instead.
func (*GetStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetStudentClassResponse) GetStudentClass() *StudentClass {
	if x != nil {
		return x.StudentClass
	}
	return nil
}

// 학반 생성 시 필요한 정보
type CreateStudentClassRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DepartmentId   int64                  `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AdmissionYear  int32                  `protobuf:"varint,3,opt,name=admission_year,json=admissionYear,proto3" json:"admission_year,omitempty"`
	GraduationYear int32                  `protobuf:"varint,4,opt,name=graduation_year,json=graduationYear,proto3" json:"graduation_year,omitempty"` // created_by는 metadata의 user-id에서 추출
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateStudentClassRequest) Reset() {
	*x = CreateStudentClassRequest{}
	mi := &file_studentclass_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentClassRequest) ProtoMessage() {}

func (x *CreateStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentClassRequest.ProtoReflect.Descriptor instead.
func (*CreateStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateStudentClassRequest) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *CreateStudentClassRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStudentClassRequest) GetAdmissionYear() int32 {
	if x != nil {
		return x.AdmissionYear
	}
	return 0
}

func (x *CreateStudentClassRequest) GetGraduationYear() int32 {
	if x != nil {
		return x.GraduationYear
	}
	return 0
}

type CreateStudentClassResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudentClass  *StudentClass          `protobuf:"bytes,1,opt,name=student_class,json=studentClass,proto3" json:"student_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateStudentClassResponse) Reset() {
	*x = CreateStudentClassResponse{}
	mi := &file_studentclass_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStudentClassResponse) ProtoMessage() {}

func (x *CreateStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStudentClassResponse.ProtoReflect.Descriptor instead.
func (*CreateStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateStudentClassResponse) GetStudentClass() *StudentClass {
	if x != nil {
		return x.StudentClass
	}
	return nil
}

// 학반 수정 시 필요한 정보
type UpdateStudentClassRequest struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	Id             int64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DepartmentId   *int64                     `protobuf:"varint,2,opt,name=department_id,json=departmentId,proto3,oneof" json:"department_id,omitempty"`
	Name           *string                    `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	AdmissionYear  *int32                     `protobuf:"varint,4,opt,name=admission_year,json=admissionYear,proto3,oneof" json:"admission_year,omitempty"`
	GraduationYear *int32                     `protobuf:"varint,5,opt,name=graduation_year,json=graduationYear,proto3,oneof" json:"graduation_year,omitempty"`
	Status         *common.StudentClassStatus `protobuf:"varint,6,opt,name=status,proto3,enum=bannote.userservice.common.v1.StudentClassStatus,oneof" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateStudentClassRequest) Reset() {
	*x = UpdateStudentClassRequest{}
	mi := &file_studentclass_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentClassRequest) ProtoMessage() {}

func (x *UpdateStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentClassRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateStudentClassRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStudentClassRequest) GetDepartmentId() int64 {
	if x != nil && x.DepartmentId != nil {
		return *x.DepartmentId
	}
	return 0
}

func (x *UpdateStudentClassRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateStudentClassRequest) GetAdmissionYear() int32 {
	if x != nil && x.AdmissionYear != nil {
		return *x.AdmissionYear
	}
	return 0
}

func (x *UpdateStudentClassRequest) GetGraduationYear() int32 {
	if x != nil && x.GraduationYear != nil {
		return *x.GraduationYear
	}
	return 0
}

func (x *UpdateStudentClassRequest) GetStatus() common.StudentClassStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.StudentClassStatus(0)
}

type UpdateStudentClassResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudentClass  *StudentClass          `protobuf:"bytes,1,opt,name=student_class,json=studentClass,proto3" json:"student_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStudentClassResponse) Reset() {
	*x = UpdateStudentClassResponse{}
	mi := &file_studentclass_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentClassResponse) ProtoMessage() {}

func (x *UpdateStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentClassResponse.ProtoReflect.Descriptor instead.
func (*UpdateStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStudentClassResponse) GetStudentClass() *StudentClass {
	if x != nil {
		return x.StudentClass
	}
	return nil
}

// 학반 삭제 시 필요한 정보
type DeleteStudentClassRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // deleted_by는 metadata의 user-id에서 추출
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStudentClassRequest) Reset() {
	*x = DeleteStudentClassRequest{}
	mi := &file_studentclass_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentClassRequest) ProtoMessage() {}

func (x *DeleteStudentClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentClassRequest.ProtoReflect.Descriptor instead.
func (*DeleteStudentClassRequest) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteStudentClassRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteStudentClassResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudentClass  *StudentClass          `protobuf:"bytes,1,opt,name=student_class,json=studentClass,proto3" json:"student_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStudentClassResponse) Reset() {
	*x = DeleteStudentClassResponse{}
	mi := &file_studentclass_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStudentClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStudentClassResponse) ProtoMessage() {}

func (x *DeleteStudentClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStudentClassResponse.ProtoReflect.Descriptor instead.
func (*DeleteStudentClassResponse) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteStudentClassResponse) GetStudentClass() *StudentClass {
	if x != nil {
		return x.StudentClass
	}
	return nil
}

// 학반 목록 조회 시 필요한 정보
type ListStudentClassesRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	DepartmentId  *int64                     `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3,oneof" json:"department_id,omitempty"`
	Status        *common.StudentClassStatus `protobuf:"varint,2,opt,name=status,proto3,enum=bannote.userservice.common.v1.StudentClassStatus,oneof" json:"status,omitempty"`
	Page          int32                      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                      `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStudentClassesRequest) Reset() {
	*x = ListStudentClassesRequest{}
	mi := &file_studentclass_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentClassesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentClassesRequest) ProtoMessage() {}

func (x *ListStudentClassesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentClassesRequest.ProtoReflect.Descriptor instead.
func (*ListStudentClassesRequest) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListStudentClassesRequest) GetDepartmentId() int64 {
	if x != nil && x.DepartmentId != nil {
		return *x.DepartmentId
	}
	return 0
}

func (x *ListStudentClassesRequest) GetStatus() common.StudentClassStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return common.StudentClassStatus(0)
}

func (x *ListStudentClassesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStudentClassesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 학반 목록 조회 응답
type ListStudentClassesResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StudentClasses []*StudentClass        `protobuf:"bytes,1,rep,name=student_classes,json=studentClasses,proto3" json:"student_classes,omitempty"`
	TotalCount     int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page           int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size           int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListStudentClassesResponse) Reset() {
	*x = ListStudentClassesResponse{}
	mi := &file_studentclass_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudentClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudentClassesResponse) ProtoMessage() {}

func (x *ListStudentClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_studentclass_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudentClassesResponse.ProtoReflect.Descriptor instead.
func (*ListStudentClassesResponse) Descriptor() ([]byte, []int) {
	return file_studentclass_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListStudentClassesResponse) GetStudentClasses() []*StudentClass {
	if x != nil {
		return x.StudentClasses
	}
	return nil
}

func (x *ListStudentClassesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListStudentClassesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStudentClassesResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_studentclass_service_proto protoreflect.FileDescriptor

const file_studentclass_service_proto_rawDesc = "" +
	"\n" +
	"\x1astudentclass/service.proto\x12#bannote.userservice.studentclass.v1\x1a\x1fstudentclass/studentclass.proto\x1a\x12common/enums.proto\"(\n" +
	"\x16GetStudentClassRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"q\n" +
	"\x17GetStudentClassResponse\x12V\n" +
	"\rstudent_class\x18\x01 \x01(\v21.bannote.userservice.studentclass.v1.StudentClassR\fstudentClass\"\xa4\x01\n" +
	"\x19CreateStudentClassRequest\x12#\n" +
	"\rdepartment_id\x18\x01 \x01(\x03R\fdepartmentId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\x0eadmission_year\x18\x03 \x01(\x05R\radmissionYear\x12'\n" +
	"\x0fgraduation_year\x18\x04 \x01(\x05R\x0egraduationYear\"t\n" +
	"\x1aCreateStudentClassResponse\x12V\n" +
	"\rstudent_class\x18\x01 \x01(\v21.bannote.userservice.studentclass.v1.StudentClassR\fstudentClass\"\xe5\x02\n" +
	"\x19UpdateStudentClassRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12(\n" +
	"\rdepartment_id\x18\x02 \x01(\x03H\x00R\fdepartmentId\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x03 \x01(\tH\x01R\x04name\x88\x01\x01\x12*\n" +
	"\x0eadmission_year\x18\x04 \x01(\x05H\x02R\radmissionYear\x88\x01\x01\x12,\n" +
	"\x0fgraduation_year\x18\x05 \x01(\x05H\x03R\x0egraduationYear\x88\x01\x01\x12N\n" +
	"\x06status\x18\x06 \x01(\x0e21.bannote.userservice.common.v1.StudentClassStatusH\x04R\x06status\x88\x01\x01B\x10\n" +
	"\x0e_department_idB\a\n" +
	"\x05_nameB\x11\n" +
	"\x0f_admission_yearB\x12\n" +
	"\x10_graduation_yearB\t\n" +
	"\a_status\"t\n" +
	"\x1aUpdateStudentClassResponse\x12V\n" +
	"\rstudent_class\x18\x01 \x01(\v21.bannote.userservice.studentclass.v1.StudentClassR\fstudentClass\"+\n" +
	"\x19DeleteStudentClassRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"t\n" +
	"\x1aDeleteStudentClassResponse\x12V\n" +
	"\rstudent_class\x18\x01 \x01(\v21.bannote.userservice.studentclass.v1.StudentClassR\fstudentClass\"\xda\x01\n" +
	"\x19ListStudentClassesRequest\x12(\n" +
	"\rdepartment_id\x18\x01 \x01(\x03H\x00R\fdepartmentId\x88\x01\x01\x12N\n" +
	"\x06status\x18\x02 \x01(\x0e21.bannote.userservice.common.v1.StudentClassStatusH\x01R\x06status\x88\x01\x01\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04sizeB\x10\n" +
	"\x0e_department_idB\t\n" +
	"\a_status\"\xc1\x01\n" +
	"\x1aListStudentClassesResponse\x12Z\n" +
	"\x0fstudent_classes\x18\x01 \x03(\v21.bannote.userservice.studentclass.v1.StudentClassR\x0estudentClasses\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size2\x8e\x06\n" +
	"\x13StudentClassService\x12\x8e\x01\n" +
	"\x0fGetStudentClass\x12;.bannote.userservice.studentclass.v1.GetStudentClassRequest\x1a<.bannote.userservice.studentclass.v1.GetStudentClassResponse\"\x00\x12\x97\x01\n" +
	"\x12CreateStudentClass\x12>.bannote.userservice.studentclass.v1.CreateStudentClassRequest\x1a?.bannote.userservice.studentclass.v1.CreateStudentClassResponse\"\x00\x12\x97\x01\n" +
	"\x12UpdateStudentClass\x12>.bannote.userservice.studentclass.v1.UpdateStudentClassRequest\x1a?.bannote.userservice.studentclass.v1.UpdateStudentClassResponse\"\x00\x12\x97\x01\n" +
	"\x12DeleteStudentClass\x12>.bannote.userservice.studentclass.v1.DeleteStudentClassRequest\x1a?.bannote.userservice.studentclass.v1.DeleteStudentClassResponse\"\x00\x12\x97\x01\n" +
	"\x12ListStudentClasses\x12>.bannote.userservice.studentclass.v1.ListStudentClassesRequest\x1a?.bannote.userservice.studentclass.v1.ListStudentClassesResponse\"\x00B\xae\x02\n" +
	"'com.bannote.userservice.studentclass.v1B\fServiceProtoP\x01ZFgithub.com/kyumin1227/bannote-proto/gen/go/studentclass;studentclassv1\xa2\x02\x03BUS\xaa\x02#Bannote.Userservice.Studentclass.V1\xca\x02#Bannote\\Userservice\\Studentclass\\V1\xe2\x02/Bannote\\Userservice\\Studentclass\\V1\\GPBMetadata\xea\x02&Bannote::Userservice::Studentclass::V1b\x06proto3"

var (
	file_studentclass_service_proto_rawDescOnce sync.Once
	file_studentclass_service_proto_rawDescData []byte
)

func file_studentclass_service_proto_rawDescGZIP() []byte {
	file_studentclass_service_proto_rawDescOnce.Do(func() {
		file_studentclass_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_studentclass_service_proto_rawDesc), len(file_studentclass_service_proto_rawDesc)))
	})
	return file_studentclass_service_proto_rawDescData
}

var file_studentclass_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_studentclass_service_proto_goTypes = []any{
	(*GetStudentClassRequest)(nil),     // 0: bannote.userservice.studentclass.v1.GetStudentClassRequest
	(*GetStudentClassResponse)(nil),    // 1: bannote.userservice.studentclass.v1.GetStudentClassResponse
	(*CreateStudentClassRequest)(nil),  // 2: bannote.userservice.studentclass.v1.CreateStudentClassRequest
	(*CreateStudentClassResponse)(nil), // 3: bannote.userservice.studentclass.v1.CreateStudentClassResponse
	(*UpdateStudentClassRequest)(nil),  // 4: bannote.userservice.studentclass.v1.UpdateStudentClassRequest
	(*UpdateStudentClassResponse)(nil), // 5: bannote.userservice.studentclass.v1.UpdateStudentClassResponse
	(*DeleteStudentClassRequest)(nil),  // 6: bannote.userservice.studentclass.v1.DeleteStudentClassRequest
	(*DeleteStudentClassResponse)(nil), // 7: bannote.userservice.studentclass.v1.DeleteStudentClassResponse
	(*ListStudentClassesRequest)(nil),  // 8: bannote.userservice.studentclass.v1.ListStudentClassesRequest
	(*ListStudentClassesResponse)(nil), // 9: bannote.userservice.studentclass.v1.ListStudentClassesResponse
	(*StudentClass)(nil),               // 10: bannote.userservice.studentclass.v1.StudentClass
	(common.StudentClassStatus)(0),     // 11: bannote.userservice.common.v1.StudentClassStatus
}
var file_studentclass_service_proto_depIdxs = []int32{
	10, // 0: bannote.userservice.studentclass.v1.GetStudentClassResponse.student_class:type_name -> bannote.userservice.studentclass.v1.StudentClass
	10, // 1: bannote.userservice.studentclass.v1.CreateStudentClassResponse.student_class:type_name -> bannote.userservice.studentclass.v1.StudentClass
	11, // 2: bannote.userservice.studentclass.v1.UpdateStudentClassRequest.status:type_name -> bannote.userservice.common.v1.StudentClassStatus
	10, // 3: bannote.userservice.studentclass.v1.UpdateStudentClassResponse.student_class:type_name -> bannote.userservice.studentclass.v1.StudentClass
	10, // 4: bannote.userservice.studentclass.v1.DeleteStudentClassResponse.student_class:type_name -> bannote.userservice.studentclass.v1.StudentClass
	11, // 5: bannote.userservice.studentclass.v1.ListStudentClassesRequest.status:type_name -> bannote.userservice.common.v1.StudentClassStatus
	10, // 6: bannote.userservice.studentclass.v1.ListStudentClassesResponse.student_classes:type_name -> bannote.userservice.studentclass.v1.StudentClass
	0,  // 7: bannote.userservice.studentclass.v1.StudentClassService.GetStudentClass:input_type -> bannote.userservice.studentclass.v1.GetStudentClassRequest
	2,  // 8: bannote.userservice.studentclass.v1.StudentClassService.CreateStudentClass:input_type -> bannote.userservice.studentclass.v1.CreateStudentClassRequest
	4,  // 9: bannote.userservice.studentclass.v1.StudentClassService.UpdateStudentClass:input_type -> bannote.userservice.studentclass.v1.UpdateStudentClassRequest
	6,  // 10: bannote.userservice.studentclass.v1.StudentClassService.DeleteStudentClass:input_type -> bannote.userservice.studentclass.v1.DeleteStudentClassRequest
	8,  // 11: bannote.userservice.studentclass.v1.StudentClassService.ListStudentClasses:input_type -> bannote.userservice.studentclass.v1.ListStudentClassesRequest
	1,  // 12: bannote.userservice.studentclass.v1.StudentClassService.GetStudentClass:output_type -> bannote.userservice.studentclass.v1.GetStudentClassResponse
	3,  // 13: bannote.userservice.studentclass.v1.StudentClassService.CreateStudentClass:output_type -> bannote.userservice.studentclass.v1.CreateStudentClassResponse
	5,  // 14: bannote.userservice.studentclass.v1.StudentClassService.UpdateStudentClass:output_type -> bannote.userservice.studentclass.v1.UpdateStudentClassResponse
	7,  // 15: bannote.userservice.studentclass.v1.StudentClassService.DeleteStudentClass:output_type -> bannote.userservice.studentclass.v1.DeleteStudentClassResponse
	9,  // 16: bannote.userservice.studentclass.v1.StudentClassService.ListStudentClasses:output_type -> bannote.userservice.studentclass.v1.ListStudentClassesResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_studentclass_service_proto_init() }
func file_studentclass_service_proto_init() {
	if File_studentclass_service_proto != nil {
		return
	}
	file_studentclass_studentclass_proto_init()
	file_studentclass_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_studentclass_service_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_studentclass_service_proto_rawDesc), len(file_studentclass_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_studentclass_service_proto_goTypes,
		DependencyIndexes: file_studentclass_service_proto_depIdxs,
		MessageInfos:      file_studentclass_service_proto_msgTypes,
	}.Build()
	File_studentclass_service_proto = out.File
	file_studentclass_service_proto_goTypes = nil
	file_studentclass_service_proto_depIdxs = nil
}
